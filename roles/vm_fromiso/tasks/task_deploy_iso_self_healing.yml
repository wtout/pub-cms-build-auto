---
# tasks to deploy VM from ISO
- name: Deploy VM from ISO self healing
  delegate_to: "{{ groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost' }}"
  block:
    - name: Get VM info
      community.vmware.vmware_guest_info:
        hostname: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['address'] }}"
        username: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['username'] }}"
        password: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['password'] }}"
        datacenter: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] }}"
        folder: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] + '/vm' + \
          ('/' + fldr_name if fldr_name != '' else '') }}"
        name: "{{ vm.name }}"
        validate_certs: false
      check_mode: false
      ignore_errors: true
      register: vmguest_info

    - name: Define nic1
      ansible.builtin.set_fact:
        nic1:
          - name: "{{ netconfig.nic1.network }}"
            ip: "{{ netconfig.nic1.ipaddress }}"
            netmask: "{{ netconfig.nic1.netmask }}"
            gateway: "{{ netconfig.nic1.gateway }}"
            device_type: vmxnet3
      when:
        - netconfig.nic1.intname != ''
    - name: Define nic2
      ansible.builtin.set_fact:
        nic2:
          - name: "{{ netconfig.nic2.network }}"
            ip: "{{ netconfig.nic2.ipaddress }}"
            netmask: "{{ netconfig.nic2.netmask }}"
            gateway: "{{ netconfig.nic2.gateway }}"
            device_type: vmxnet3
      when:
        - netconfig.nic2.intname != ''
    - name: Define list of nics
      ansible.builtin.set_fact:
        nics_list: "{{ nic1 + nic2 | default([]) }}"

    - name: Create VM from ISO
      block:
        - name: Deploy VM from ISO
          ansible.builtin.include_tasks: task_deploy_iso.yml
      rescue:
        - name: Delete VM
          ansible.builtin.include_role:
            name: vm_creation
            tasks_from: task_delete_vm.yml
        - name: Deploy VM from ISO
          ansible.builtin.include_tasks: task_deploy_iso.yml
