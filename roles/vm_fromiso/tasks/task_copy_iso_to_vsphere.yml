---
# Tasks to copy the ISO file to datastore
- name: Copy ISO file to datastore
  delegate_to: "{{ groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost' }}"
  block:
    - name: Check if the installer ISO is on the datastore
      community.vmware.vsphere_file:
        hostname: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['address'] }}"
        username: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['username'] }}"
        password: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['password'] }}"
        datacenter: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] }}"
        datastore: "{{ iso_datastore }}"
        path: "{{ iso_path }}/{{ iso_installer }}"
        state: file
        validate_certs: false
      register: iso_present
      when: ds_folder is succeeded
  rescue:
    - name: Copy installer ISO file to vsphere
      community.vmware.vsphere_copy:
        hostname: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['address'] }}"
        username: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['username'] }}"
        password: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['password'] }}"
        datacenter: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] }}"
        datastore: "{{ iso_datastore }}"
        src: "{{ auto_dir }}/{{ iso_dir }}/{{ iso_installer }}"
        dest: "{{ iso_path }}/{{ iso_installer }}"
        validate_certs: false
      register: reg_copy_iso
      async: 7200
      poll: 30
      when:
        - not ansible_check_mode
  always:
    - name: Create {{ '/var/tmp/' + ('secondary' if 'dr' in group_names else 'primary') + '_iso_copy_complete.txt' }}
      ansible.builtin.file:
        path: "{{ '/var/tmp/' + ('secondary' if 'dr' in group_names else 'primary') + '_iso_copy_complete.txt' }}"
        state: touch
        mode: '644'
