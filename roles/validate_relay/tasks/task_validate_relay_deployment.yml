---
# Tasks to validate relay deployment
- name: Disable requiretty on host
  ansible.builtin.replace:
    path: '/etc/sudoers'
    regexp: '^(Defaults.*requiretty)$'
    replace: '#\g<1>'
  register: reg_disable_rtty
  become: true
  vars:
    ansible_ssh_pipelining: false
- name: Run validation script
  ansible.builtin.shell: |
    ./relay_deploy_validate.sh {{ vars[mystr + 'RLY_DB_PASS'] }} {{ vars[mystr + 'SPL_ADMIN_PASS'] }}
  args:
    chdir: /opt/qsscripts
  register: reg_rly_validate
  changed_when: reg_rly_validate.rc == 0
  check_mode: false
  ignore_errors: true
  no_log: true
  vars:
    mystr: "{{ 'S' if 'dr' in group_names else 'P' }}"
- name: Re-enable requiretty on host
  ansible.builtin.replace:
    path: '/etc/sudoers'
    regexp: '^#(Defaults.*requiretty)$'
    replace: '\g<1>'
  become: true
  when: reg_disable_rtty is changed
- name: Define rlystatus
  ansible.builtin.set_fact:
    rlystatus: "{{ rlystatus | default([]) | union([loop_item | regex_replace('^.*(FAIL.*)\\\u001b.*$', '\\1')]) }}"
  loop: "{{ reg_rly_validate.stdout_lines | select('search', 'FAIL') | list }}"
  loop_control:
    loop_var: loop_item
  no_log: true
- name: Assert relay status is clean
  ansible.builtin.assert:
    that: rlystatus | default([]) == []
    fail_msg: "{{ rlystatus | default([]) }}"
