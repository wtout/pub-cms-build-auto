---
# Tasks to validate passwordless SSH to relay
- name: Validate passwordless SSH to relay
  when: "inventory_hostname is search('rly')"
  block:
    - name: Delete root's id_rsa
      ansible.builtin.file:
        path: '/root/.ssh/id_rsa'
        state: absent
      register: reg_delete
    - name: Run the sshKeyGen.sh script
      ansible.builtin.shell: |
        /root/bin/sshKeyGen.sh
      register: reg_keygen
      changed_when: reg_keygen.rc == 0
    - name: Setting passwordless SSH to relay up
      block:
        - name: Set up passwordless SSH to relay
          ansible.builtin.shell: |
            /root/bin/configSSH.sh root {{ hostvars[rly_item]['vm']['name'] }} {{ ansible_ssh_pass }} /root
          register: reg_setup_ssh
          changed_when: reg_setup_ssh.rc == 0
          loop: "{{ groups['rly'][1:] if 'dr' not in group_names else groups['drrly'] }}"
          loop_control:
            loop_var: rly_item
          no_log: true
        - name: Assert that we did not encounter a permission denied error
          ansible.builtin.assert:
            that: reg_setup_ssh.results | select('search', 'Permission denied') | list == []
          register: reg_setup_ssh_status
        - name: Verify passwordless SSH to relay
          ansible.builtin.shell: |
            ssh {{ hostvars[rly_item]['vm']['name'] }} exit
          register: reg_check_ssh
          changed_when: false
          loop: "{{ groups['rly'][1:] if 'dr' not in group_names else groups['drrly'] }}"
          loop_control:
            loop_var: rly_item
      rescue:
        - name: Define vr_passwordless_ssh_rly_status
          ansible.builtin.set_fact:
            vr_passwordless_ssh_rly_status: "{{ vr_passwordless_ssh_rly_status | default([]) | union((['Passwordless SSH to ' + hostvars[rly_item]['vm']['name'] + ' cannot be set up'] + reg_setup_ssh.results | selectattr('rly_item', 'equalto', rly_item) | map(attribute='stdout') | list if reg_setup_ssh.results | selectattr('rly_item', 'equalto', rly_item) | map(attribute='stdout') | list | first is search('Permission denied') else []) if reg_setup_ssh_status is failed else (['Passwordless SSH to ' + hostvars[rly_item]['vm']['name'] + ' cannot be set up'] + reg_check_ssh.results | selectattr('rly_item', 'equalto', rly_item) | map(attribute='stderr') | list if reg_check_ssh.results | selectattr('rly_item', 'equalto', rly_item) | map(attribute='failed') | list | first == true else []) if reg_check_ssh is failed else []) }}" # noqa: yaml[line-length]
          loop: "{{ groups['rly'][1:] if 'dr' not in group_names else groups['drrly'] }}"
          loop_control:
            loop_var: rly_item
    - name: Assert that passwordless SSH to relay is working
      ansible.builtin.assert:
        that: vr_passwordless_ssh_rly_status | default([]) == []
        fail_msg: "{{ vr_passwordless_ssh_rly_status | default([]) }}"
