---
# tasks file for infra_license
- block:
  - name: Gather VM info
    community.vmware.vmware_guest_info:
      hostname: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['address'] }}"
      username: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['username'] }}"
      password: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['password'] }}"
      name: "{{ vm.name }}"
      datacenter: "{{ datacenter.primary.name if 'stack' in group_names else datacenter.secondary.name }}"
      validate_certs: no
    register: csr_info
    until: csr_info.instance.ipv4 != None
    ignore_errors: true
    delegate_to: "{{ groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost' }}"

  - ansible.builtin.assert:
      that:
        - csr_info is succeeded
      fail_msg: 'The CSR VM is not found. Aborting playbook execution!'
      
  - ansible.builtin.set_fact:
      ansible_host: "{{ csr_info.instance.ipv4 }}"
      dhcp_address: "{{ csr_info.instance.ipv4 }}"

  - name: "infra_check_csr_license: check CSR license"
    include_role:
      name: infra_check_csr_license
    vars:
      ignore: yes

  - name: Define CSR serial number
    cisco.ios.ios_facts:
      gather_subset: min
  - name: List Licenses directory
    ansible.builtin.shell: "ls {{ auto_dir }}/Packages/licenses"
    register: license_file_names
    delegate_to: "{{ groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost' }}"
  - name: Define CSR license file name
    ansible.builtin.set_fact:
      license_file_name: "{{ license_file_names.stdout_lines|select('search', ansible_net_serialnum)|list|sort(reverse=true)|first if license_file_names.stdout_lines|select('search', ansible_net_serialnum)|list|length >= 1 else '' }}"
  - ansible.builtin.debug:
      msg: 'No CSR license file found!'
    when:
      - license_file_name == ''
  - block:
    - name: get new license expiration date
      ansible.builtin.shell: grep -i end_date {{ auto_dir }}/Packages/licenses/{{ license_file_name }}|awk -F 'END_DATE' '{print $2}'|sed 's|^>\(.*\)T.*$|\1|'
      register: reg_new_lic_exp_date
      delegate_to: "{{ groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost' }}"
      check_mode: no
      when: curr_exp_date|default('') != ''
    - block:
      - name: enable scp server
        cisco.ios.ios_config:
          lines:
            - ip scp server enable
      - name: Transfer license from Packages to CSR
        ansible.builtin.shell: "sshpass -p {{ credentials.password }} scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa {{ auto_dir }}/Packages/licenses/{{ license_file_name }} {{ credentials.username }}@{{ netconfig.nic3.ipaddress }}:/bootflash:{{ license_file_name }}"
        delegate_to: "{{ groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost' }}"
        register: reg_lic_transfer
        until: reg_lic_transfer is succeeded
      - name: install license
        cisco.ios.ios_command:
          commands:
            - command: "license install bootflash:{{ license_file_name }}"
              prompt: '[confirm]'
              answer: 'yes'
        register: csr_license_details_1
        failed_when: csr_license_details_1 is search('1/1 licenses were failed to install')
      when:
        - not is_licensed or (reg_new_lic_exp_date.stdout|to_datetime('%Y-%m-%d') - curr_exp_date|to_datetime('%Y-%m-%d')).days > 0
    when:
      - license_file_name != ''
  when: inventory_hostname is search('csr')
  tags: infra_license
