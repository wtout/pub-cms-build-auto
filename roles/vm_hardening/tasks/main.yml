---
# tasks file for vm_hardening
- name: Main hardening block
  when: harden_vms | default(false) | bool
  tags: vm_hardening
  block:
    - name: Determine if hardening is needed
      when:
        - inventory_hostname is not search('em7')
      block:
        - name: Check VM credentials
          ansible.builtin.wait_for_connection:
            timeout: 3
          register: vh_vm_creds
          ignore_errors: true
          check_mode: false
        - name: Check if hardening is enabled
          block:
            - name: Check VM reachable
              ansible.builtin.command: ping {{ ansible_host }} -c 1
              register: vh_vm_reachable
              changed_when: false
              check_mode: false
              become: "{{ true if host_os | lower is search('almalinux|ubuntu') else false }}"
              delegate_to: |
                "{{ groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost' }}"
            - name: Determine the correct credentials
              when:
                - vh_vm_creds is failed
                - vh_vm_creds.msg is search('Invalid/incorrect')
              block:
                - name: Check updated credentials
                  block:
                    - name: Switch to user {{ vm_svc_user }}
                      ansible.builtin.set_fact:
                        ansible_user: "{{ vm_svc_user }}"
                        ansible_ssh_pass: "{{ vm_svc_pass }}"
                        ansible_become_pass: "{{ vm_svc_pass }}"
                      no_log: true
                    - name: Check updated VM credentials
                      ansible.builtin.wait_for_connection:
                        timeout: 3
                      register: vh_vm_creds2
                      check_mode: false
                  rescue:
                    - name: Define creds_status
                      ansible.builtin.set_fact:
                        creds_status: 'The VM credentials are invalid'
          rescue:
            - name: Determine the correct credentials
              when:
                - vh_vm_creds is failed
                - vh_vm_creds.msg is search('Invalid/incorrect')
              block:
                - name: Switch to user {{ vm_svc_user }}
                  ansible.builtin.set_fact:
                    ansible_user: "{{ vm_svc_user }}"
                    ansible_ssh_pass: "{{ vm_svc_pass }}"
                    ansible_become_pass: "{{ vm_svc_pass }}"
                  no_log: true
                - name: Check connection
                  ansible.builtin.wait_for_connection:
                    timeout: 3
                  register: vh_vm_connection
                  ignore_errors: true
                  check_mode: false
            - name: Define hardv
              when: "vh_vm_creds is succeeded or (vh_vm_creds is failed and vh_vm_connection is not skipped and vh_vm_connection is succeeded)"
              block:
                - name: Notification
                  ansible.builtin.debug:
                    msg: "VM hardening is enabled. Nothing to do"
                - name: Set flag to not harden the VMs
                  ansible.builtin.set_fact:
                    hardv: false
            - name: Define creds_status
              ansible.builtin.set_fact:
                creds_status: 'The VM IP address is invalid'
              when:
                - vh_vm_creds is failed
                - vh_vm_creds.msg is search('Failed to connect to the host via ssh')
        - name: Assert that neither the creds nor the IP are invalid
          ansible.builtin.assert:
            that:
              - creds_status | default('') is not search('invalid')
            fail_msg: "{{ creds_status | default('') }}"
    - name: Enable hardening
      when: hardv | default(true) | bool
      block:
        - name: Enable hardening
          ansible.builtin.include_tasks: task_enable_hardening.yml
        - name: Update iptables
          ansible.builtin.include_tasks: task_update_iptables.yml
        - name: Flush handlers
          ansible.builtin.meta: flush_handlers
    - name: Set the root to never expire
      ansible.builtin.include_tasks: task_root_never_expire.yml
