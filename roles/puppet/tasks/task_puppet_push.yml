---
# tasks to do a puppet push
- block:
  - name: "vm_configuration: make DB01 primary"
    include_role:
      name: vm_configuration
      tasks_from: task_make_db01_primary.yml
  - name: check if puppet push {{ push_num|int }} is already running
    shell: ps aux | grep "puppet agent" | grep test | grep -v grep || echo "not running"
    register: ppr1
    check_mode: no
  - name: Wait for puppet push {{ push_num|int }} to finish
    shell: ps aux | grep "puppet agent" | grep test | grep -v grep || echo "finished"
    register: ppr2
    until: ppr2.stdout is search('finished')
    retries: 180
    delay: 10
    when:
      - not ansible_check_mode
      - ppr1.stdout is not search('not running')
  - block:
    - name: check if puppet agent_catalog_run.lock exists {{ push_num|int + 1 }}
      stat:
        path: "{{ '.puppetlabs/opt/puppet' if inventory_hostname is search('em7') else '/opt/puppetlabs/puppet' }}/cache/state/agent_catalog_run.lock"
      register: lock_file
    - name: Wait for puppet agent_catalog_run.lock to disappear {{ push_num|int + 1 }}
      wait_for:
        path: "{{ '.puppetlabs/opt/puppet' if inventory_hostname is search('em7') else '/opt/puppetlabs/puppet' }}/cache/state/agent_catalog_run.lock"
        state: absent
        timeout: 180
      when: lock_file.stat.exists
    ignore_errors: true
    when: ppr1 is search('not running')
  - name: Start puppet push {{ push_num|int + 1 }}
    shell: /usr/local/bin/puppet agent --server {{ puppet.secondary.fqdn if 'dr' in group_names else puppet.primary.fqdn }} --test
    register: puppet_push
    no_log: true
    failed_when:
      - puppet_push.stdout is not search('Run of Puppet configuration client already in progress')
      - puppet_push.stdout is not search('Applied catalog in')
  - debug:
      msg:
        - "{{ puppet_push.stdout }}"
    when:
      - puppet_push.stdout_lines is defined
      - puppet_push.stdout_lines == [] or puppet_push.stdout_lines|last is not search('Applied catalog')
  - debug:
      msg:
        - "{{ puppet_push.stdout_lines|last | regex_replace('^.*(Notice.*seconds).*$', '\\1') }}"
    when:
      - puppet_push.stdout_lines is defined
      - puppet_push.stdout_lines != []
      - puppet_push.stdout_lines|last is search('Applied catalog')
  tags: puppet
