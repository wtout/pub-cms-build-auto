---
# tasks to do a puppet push
- name: "Vm_configuration: make DB01 primary"
  ansible.builtin.include_role:
    name: vm_configuration_ova
    tasks_from: task_make_db01_primary.yml
- name: Check if puppet push {{ push_num | default('1') + ' is already running' }}
  ansible.builtin.shell:
    cmd: set -o pipefail && ps aux | grep "puppet agent" | grep test | grep -v grep || echo "not running"
    executable: /bin/bash
  register: ppr1
  changed_when: false
  check_mode: false
- name: Wait for puppet push {{ push_num | default('1') + ' to finish' }}
  ansible.builtin.shell:
    cmd: set -o pipefail && ps aux | grep "puppet agent" | grep test | grep -v grep || echo "finished"
    executable: /bin/bash
  register: ppr2
  changed_when: false
  until: ppr2.stdout is search('finished')
  retries: 180
  delay: 10
  when:
    - not ansible_check_mode
    - ppr1.stdout is not search('not running')
- name: Wait until puppet push is complete
  when: ppr1 is search('not running')
  ignore_errors: true
  block:
    - name: Check if puppet agent_catalog_run.lock exists {{ push_num | default('1') | int + 1 }}
      ansible.builtin.stat:
        path: "{{ '.puppetlabs/opt/puppet' if inventory_hostname is search('em7') else '/opt/puppetlabs/puppet' }}/cache/state/agent_catalog_run.lock"
      register: lock_file
    - name: Wait for puppet agent_catalog_run.lock to disappear {{ push_num | default('1') | int + 1 }}
      ansible.builtin.wait_for:
        path: "{{ '.puppetlabs/opt/puppet' if inventory_hostname is search('em7') else '/opt/puppetlabs/puppet' }}/cache/state/agent_catalog_run.lock"
        state: absent
        timeout: 180
      when: lock_file.stat.exists
- name: Start puppet push {{ push_num | default('1') | int + 1 }}
  ansible.builtin.command: /usr/local/bin/puppet agent --server {{ puppet.secondary.fqdn if 'dr' in group_names else puppet.primary.fqdn }} --test
  register: puppet_push
  changed_when: puppet_push.rc == 0
  no_log: true
  ignore_unreachable: true
  failed_when:
    - puppet_push.stdout is not search('Run of Puppet configuration client already in progress')
    - puppet_push.stdout is not search('Applied catalog in')
- name: Debug message
  ansible.builtin.debug:
    msg: "{{ puppet_push }}"
  when: puppet_push is unreachable or puppet_push is failed
- name: Check connection
  ansible.builtin.wait_for_connection:
    timeout: 3
  register: reg_con
  ignore_errors: true
  check_mode: false
- name: Rename NIC2 interface
  when: reg_con is failed
  block:
    - name: "Vm_creation: Define fldr_name"
      ansible.builtin.include_role:
        name: vm_creation
        tasks_from: task_define_folder_name.yml
      when: fldr_name is not defined
    - name: "Vm_fromiso: Poweroff VM"
      ansible.builtin.include_role:
        name: vm_fromiso
        tasks_from: task_poweroff_vm.yml
    - name: "Vm_fromiso: Poweron VM"
      ansible.builtin.include_role:
        name: vm_fromiso
        tasks_from: task_poweron_vm.yml
    - name: Check connection
      ansible.builtin.wait_for_connection:
        timeout: 3
      check_mode: false
    - name: "Vm_fromiso: Rename NIC2"
      ansible.builtin.include_role:
        name: vm_fromiso
        tasks_from: task_rename_nic2_self_healing.yml
- name: Debug message
  ansible.builtin.debug:
    msg:
      - "{{ puppet_push.stdout }}"
  when:
    - puppet_push.stdout_lines is defined
    - puppet_push.stdout_lines == [] or puppet_push.stdout_lines | last is not search('Applied catalog')
- name: Information message
  ansible.builtin.debug:
    msg:
      - "{{ puppet_push.stdout_lines | last | regex_replace('^.*(Notice.*seconds).*$', '\\1') }}"
  when:
    - puppet_push.stdout_lines is defined
    - puppet_push.stdout_lines != []
    - puppet_push.stdout_lines | last is search('Applied catalog')
