---
# Tasks to relaunch puppet push 1
- name: Reset SSH password
  ansible.builtin.set_fact:
    ansible_ssh_pass: "{{ preppp }}"
    ansible_become_pass: "{{ preppp }}"
  no_log: true
- name: "Vm_configuration: make DB01 primary"
  ansible.builtin.include_role:
    name: vm_configuration_ova
    tasks_from: task_make_db01_primary.yml
- name: "Relaunch puppet push #1"
  ansible.builtin.command: /usr/local/bin/puppet agent --server {{ puppet.secondary.fqdn if 'dr' in group_names else puppet.primary.fqdn }} --test
  register: puppet_agent2
  changed_when: puppet_agent2.rc == 0
  async: 2700
  poll: 10
  ignore_errors: true
  no_log: true
- name: Information message
  ansible.builtin.debug:
    msg:
      - "{{ puppet_agent2.stdout_lines | last | regex_replace('^.*(Notice.*seconds).*$', '\\1') }}"
  when:
    - puppet_agent2.stdout_lines != []
    - puppet_agent2.stdout_lines | last is search('Applied catalog')
- name: Update SSH password
  ansible.builtin.set_fact:
    ansible_ssh_pass: "{{ postppp }}"
    ansible_become_pass: "{{ postppp }}"
  no_log: true
- name: Check updated VM credentials
  ansible.builtin.wait_for_connection:
    sleep: 10
    timeout: 10
  register: repush1_status
  ignore_errors: true
- name: Fix failed push
  when: repush1_status is failed
  block:
    - name: Reset SSH password
      ansible.builtin.set_fact:
        ansible_ssh_pass: "{{ preppp }}"
        ansible_become_pass: "{{ preppp }}"
      no_log: true
    - name: Delete certificates
      ansible.builtin.include_tasks: task_delete_certificates.yml
    - name: Add VM to class
      ansible.builtin.include_tasks: task_add_vm_to_class.yml
    - name: Generate and check certificates
      when:
        - delete_client_cert_on_vm | default(false) | bool
      block:
        - name: Generate certificate
          ansible.builtin.include_tasks: task_generate_cert.yml
        - name: Generate certificate for EM7
          ansible.builtin.include_tasks: task_generate_cert_for_em7.yml
        - name: Check certificate
          ansible.builtin.include_tasks: task_check_certificate.yml
    - name: "Vm_configuration: make DB01 primary"
      ansible.builtin.include_role:
        name: vm_configuration_ova
        tasks_from: task_make_db01_primary.yml
    - name: "Relaunch puppet push #2"
      ansible.builtin.command: /usr/local/bin/puppet agent --server {{ puppet.secondary.fqdn if 'dr' in group_names else puppet.primary.fqdn }} --test
      register: puppet_agent3
      changed_when: puppet_agent3.rc == 0
      async: 2700
      poll: 10
      ignore_errors: true
      no_log: true
    - name: Information message
      ansible.builtin.debug:
        msg:
          - "{{ puppet_agent3.stdout_lines | last | regex_replace('^.*(Notice.*seconds).*$', '\\1') }}"
      when:
        - puppet_agent3.stdout_lines != []
        - puppet_agent3.stdout_lines | last is search('Applied catalog')
    - name: Update SSH password
      ansible.builtin.set_fact:
        ansible_ssh_pass: "{{ postppp }}"
        ansible_become_pass: "{{ postppp }}"
      no_log: true
    - name: Check updated VM credentials
      ansible.builtin.wait_for_connection:
        sleep: 10
        timeout: 10
      register: repush2_status
      ignore_errors: true
    - name: Rebuilding VM
      when:
        - inventory_hostname is not search('em7db') or (groups['em7'] | length == 1 and 'em7' not in group_names)
        - repush2_status is failed
      block:
        - name: Rebuild host
          ansible.builtin.include_tasks: task_rebuild_host.yml
        - name: Delete certificates
          ansible.builtin.include_tasks: task_delete_certificates.yml
        - name: Add VM to class
          ansible.builtin.include_tasks: task_add_vm_to_class.yml
        - name: Generate and check certificates
          when:
            - delete_client_cert_on_vm | default(false) | bool
          block:
            - name: Generate certificate
              ansible.builtin.include_tasks: task_generate_cert.yml
            - name: Generate certificate for EM7
              ansible.builtin.include_tasks: task_generate_cert_for_em7.yml
            - name: Check certificate
              ansible.builtin.include_tasks: task_check_certificate.yml
        - name: "Vm_configuration: make DB01 primary"
          ansible.builtin.include_role:
            name: vm_configuration_ova
            tasks_from: task_make_db01_primary.yml
        - name: "Relaunch puppet push #3"
          ansible.builtin.command: /usr/local/bin/puppet agent --server {{ puppet.secondary.fqdn if 'dr' in group_names else puppet.primary.fqdn }} --test
          register: puppet_agent4
          changed_when: puppet_agent4.rc == 0
          async: 2700
          poll: 10
          ignore_errors: true
          no_log: true
        - name: Information message
          ansible.builtin.debug:
            msg:
              - "{{ puppet_agent4.stdout_lines | last | regex_replace('^.*(Notice.*seconds).*$', '\\1') }}"
          when:
            - puppet_agent4.stdout_lines != []
            - puppet_agent4.stdout_lines | last is search('Applied catalog')
        - name: Update SSH password
          ansible.builtin.set_fact:
            ansible_ssh_pass: "{{ postppp }}"
            ansible_become_pass: "{{ postppp }}"
          no_log: true
        - name: Check updated VM credentials
          ansible.builtin.wait_for_connection:
            sleep: 10
            timeout: 10
          register: repush3_status
          ignore_errors: true
        - name: Debug message
          ansible.builtin.assert:
            that:
              - repush3_status is succeeded
            fail_msg: "Puppet could not be pushed succesfully on {{ inventory_hostname }}"
- name: Define repush_status
  ansible.builtin.set_fact:
    repush_status: "{{ puppet_agent4 if puppet_agent4 is not skipped else puppet_agent3 if puppet_agent3 is not skipped else puppet_agent2 if puppet_agent2 is not skipped else puppet_agent1 if puppet_agent1 is not skipped else '' }}" # noqa: yaml[line-length]
