---
# Tasks to delete the puppet certificate
- block:
  - name: check if there is a cert on the VM
    stat:
      path: "{{ '~/.puppetlabs/etc/puppet/ssl/certs/ca' if inventory_hostname is search('em7') else '/etc/puppetlabs/puppet/ssl/certs/' + vm.name + '.' + sysconfig.domain_name }}.pem"
    register: client_cert_status
  - debug:
      msg: "Found no client certificate on {{ inventory_hostname }}"
    when: not client_cert_status.stat.exists

  - block:
    - name: check if puppet server {{ puppet.vmname }} is reachable
      wait_for_connection:
        timeout: 3
      run_once: true
    - name: get list of certificates on {{ puppet.vmname }}
      shell: >
        puppet cert list --all | egrep '{{ customer.secondary.name_prefix if 'dr' in group_names else customer.primary.name_prefix }}' || echo 'Found no certificate'
      become: true
      ignore_errors: true
      register: certs_on_server
      delegate_to: "{{ groups['puppet']|first }}"
      run_once: true
    - debug:
        msg:
          - "{{ certs_on_server.stdout_lines }}"
      run_once: true
    - name: check if certificate exists on {{ puppet.vmname }}
      set_fact:
        client_cert_on_server: "{{ ((certs_on_server.stdout_lines|default([]) | select('search', host_cert_name) | list | join).split('(') | last).split(') ') }}"
    check_mode: no
    delegate_to: "{{ groups['puppet']|first }}"

  - debug:
      msg: "Found no client certificate for {{ inventory_hostname }} on puppet server"
    when:
      - client_cert_on_server == ''

  - name: check if client cert fingerprint matches cert on server
    shell: openssl x509 -text -noout -{{ client_cert_on_server[0] }} -fingerprint -in {{ 'ca' if inventory_hostname is search('em7') else vm.name + '.' + sysconfig.domain_name }}.pem | tail -1 | cut -d '=' -f2 | grep {{ client_cert_on_server[1] }}
    args:
      chdir: "{{ '~/.puppetlabs/etc/puppet/ssl/certs' if inventory_hostname is search('em7') else '/etc/puppetlabs/puppet/ssl/certs' }}"
    register: client_cert_match
    check_mode: no
    ignore_errors: true
    when:
      - client_cert_status.stat.exists
      - client_cert_on_server != ''

  - name: define delete client cert on puppet server
    set_fact:
      delete_client_cert_on_server: true
    when:
      - client_cert_on_server != '' and (not client_cert_status.stat.exists or client_cert_match is failed)

  - name: define delete client cert on VM
    set_fact:
      delete_client_cert_on_vm: true
    when:
      - (inventory_hostname is search('em7') and customer.release is search('9.2')) or (client_cert_status.stat.exists and (client_cert_on_server == '' or client_cert_match is failed)) or not client_cert_status.stat.exists

  - name: delete the certificate on the EM7 VM
    block:
    - name: delete ssl directory on VM
      file:
        path: '~/.puppetlabs/etc/puppet/ssl'
        state: absent
    - name: uninstall puppet agent on VM
      yum:
        name: puppet-agent
        state: absent
      become: "{{ true if inventory_hostname is search('em7') else false }}"
    when:
      - inventory_hostname is search('em7')
      - delete_client_cert_on_vm | default(false) | bool

  - name: delete the certificate on the non-EM7 VM
    block:
    - name: delete puppetlabs directory on VM
      file:
        path: '/etc/puppetlabs'
        state: absent
    - name: uninstall puppet agent on VM
      yum:
        name: puppet-agent
        state: absent
    when:
      - inventory_hostname is not search('em7')
      - delete_client_cert_on_vm | default(false) | bool

  - name: delete the VM certificate
    shell: >
      puppet cert clean {{ host_cert_name }}
    args:
      chdir: '/usr/local/bin'
    register: del_vm_cert
    ignore_errors: true
    become: true
    when: delete_client_cert_on_server | default(false) | bool
    until: del_vm_cert is succeeded
    delegate_to: "{{ groups['puppet']|first }}"
  tags: puppet
