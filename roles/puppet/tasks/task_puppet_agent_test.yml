---
# Tasks to perform puppet agent test
- name: Check if puppet agent test is already running
  ansible.builtin.shell:
    cmd: set -o pipefail && ps aux | grep "puppet agent" | grep test | grep -v grep || echo "not running"
    executable: /bin/bash
  register: puppet_push_running
  changed_when: false
  until: puppet_push_running is succeeded
  async: 60
  poll: 10
  check_mode: false

- name: Waiting until puppet push is complete
  when: puppet_push_running.stdout is not search('not running')
  block:
    - name: Information message
      ansible.builtin.debug:
        msg: 'Puppet push is running'
    - name: Update SSH password
      ansible.builtin.set_fact:
        ansible_ssh_pass: "{{ postppp }}"
        ansible_become_pass: "{{ postppp }}"
      no_log: true
      when: ansible_ssh_pass != postppp
    - name: Check updated VM credentials
      ansible.builtin.wait_for_connection:
        sleep: 10
        timeout: "{{ 2700 if customer.disaster_recovery else 1800 }}"
      register: connection_status1
      check_mode: false
    - name: Wait for puppet push to finish
      ansible.builtin.shell:
        cmd: set -o pipefail && ps aux | grep "puppet agent" | grep test | grep -v grep || echo "finished"
        executable: /bin/bash
      register: puppet_push_running1
      changed_when: false
      until: puppet_push_running1.stdout is search('finished')
      retries: 180
      delay: 10
      check_mode: false
    - name: Get puppet push status
      ansible.builtin.shell: "grep -E ': Applied catalog in [0-9]+.*seconds' /var/log/messages || echo 'Puppet push failed'"
      register: puppet_push_status1
      changed_when: false
      until: puppet_push_status1.stdout is not search('push failed')
      retries: 10
      delay: 60
      become: "{{ true if inventory_hostname is search('em7') else false }}"
      check_mode: false
    - name: Check if puppet push completed successfully
      ansible.builtin.assert:
        that: puppet_push_status1.stdout is not search('Puppet push failed')
        fail_msg: 'Puppet push did not complete successfully'

- name: Starting puppet push
  when:
    - puppet_push_running.stdout is search('not running')
  block:
    - name: Check VM credentials
      ansible.builtin.wait_for_connection:
        timeout: 3
      register: vm_creds
      ignore_errors: true
      check_mode: false
    - name: Update SSH password
      ansible.builtin.set_fact:
        ansible_ssh_pass: "{{ postppp }}"
        ansible_become_pass: "{{ postppp }}"
      no_log: true
      when:
        - vm_creds is failed
        - vm_creds.msg is search('Invalid/incorrect username/password')
    - name: Check if puppet push was started
      ansible.builtin.shell: >
        grep -E "Applying configuration version '[0-9]+'" /var/log/messages || echo 'Puppet push not started'
      register: puppet_push_started
      changed_when: false
      check_mode: false
      become: "{{ true if inventory_hostname is search('em7') else false }}"
    - name: Information message
      ansible.builtin.debug:
        msg: 'Puppet push was never started. Will start it'
      when: puppet_push_started.stdout is search('Puppet push not started')
    - name: Start puppet push
      when: puppet_push_started.stdout is not search('Puppet push not started')
      block:
        - name: Get previous puppet push status if any
          ansible.builtin.shell:
            cmd: >
              set -o pipefail && grep -E ': Applied catalog in [0-9]+.*seconds' /var/log/messages || echo 'Puppet push failed'
            executable: /bin/bash
          register: puppet_push_status2
          changed_when: false
          until: puppet_push_status2.stdout is not search('push failed')
          retries: 20
          delay: 60
          check_mode: false
          become: "{{ true if inventory_hostname is search('em7') else false }}"
        - name: Display previous puppet push status
          ansible.builtin.debug:
            msg: "{{ 'Previous Puppet push did not complete successfully. Re-running puppet push' if puppet_push_status2.stdout is search('Puppet push failed') else 'Previous Puppet push completed successfully' }}" # noqa: yaml[line-length]
        - name: Trigger puppet push start
          ansible.builtin.set_fact:
            start_puppet_push: 'false'
          when: puppet_push_status2.stdout is not search('Puppet push failed')
    - name: Start puppet push
      when:
        - not ansible_check_mode
        - start_puppet_push | default(true) | bool
      block:
        - name: Puppet push 1
          ansible.builtin.command: |
            /usr/local/bin/puppet agent --server {{ puppet.secondary.fqdn if 'dr' in group_names else puppet.primary.fqdn }} --test
          register: puppet_agent
          changed_when: puppet_agent.rc == 0
          async: 4000
          poll: 10
          ignore_errors: true
          no_log: true
        - name: Debug message
          ansible.builtin.debug:
            msg:
              - "{{ puppet_agent.stdout }}"
          when:
            - puppet_agent.stdout_lines is defined
            - puppet_agent.stdout_lines == [] or puppet_agent.stdout_lines | last is not search('Applied catalog')
        - name: Information message
          ansible.builtin.debug:
            msg:
              - "{{ puppet_agent.stdout_lines | last | regex_replace('^.*(Notice.*seconds).*$', '\\1') }}"
          when:
            - puppet_agent.stdout_lines is defined
            - puppet_agent.stdout_lines != []
            - puppet_agent.stdout_lines | last is search('Applied catalog')
        - name: Update SSH password
          ansible.builtin.set_fact:
            ansible_ssh_pass: "{{ postppp }}"
            ansible_become_pass: "{{ postppp }}"
          no_log: true
        - name: Check updated VM credentials
          ansible.builtin.wait_for_connection:
            sleep: 10
            timeout: 10
          register: connection_status2
          ignore_errors: true
        - name: Repush puppet
          ansible.builtin.include_tasks: task_repush_puppet.yml
          when: connection_status2 is failed
        - name: Assert that the catalog has been applied
          ansible.builtin.assert:
            that:
              - myvar.stdout_lines | last is search('Applied catalog')
            fail_msg: "{{ myvar.stdout }}"
          vars:
            myvar: "{{ repush_status if (repush_status is defined and repush_status is not skipped and repush_status != '') else puppet_agent }}"
        - name: Check if push is successful
          when: inventory_hostname is not search('em7')
          block:
            - name: Wait for puppet push 1 to finish
              ansible.builtin.shell:
                cmd: set -o pipefail && ps aux | grep "puppet agent" | grep test | grep -v grep || echo "finished"
                executable: /bin/bash
              register: puppet_push_running2
              changed_when: false
              until: puppet_push_running2.stdout is search('finished')
              retries: 180
              delay: 10
            - name: Get puppet push 1 status
              ansible.builtin.shell:
                cmd: >
                  set -o pipefail && grep -E ': Applied catalog in [0-9]+.*seconds' /var/log/messages || echo 'Puppet push failed'
                executable: /bin/bash
              register: puppet_push_status3
              changed_when: false
              until: puppet_push_status3.stdout is not search('push failed')
              retries: 20
              delay: 60
              become: "{{ true if inventory_hostname is search('em7') else false }}"
            - name: Check if puppet push 1 completed successfully
              ansible.builtin.assert:
                that: puppet_push_status3.stdout is not search('Puppet push failed')
                fail_msg: 'Puppet push did not complete successfully'

- name: Additional puppet pushes
  when:
    - inventory_hostname is not search('em7') or (inventory_hostname is search('em7') and customer.version.release is search('9.2'))
  block:
    - name: Restart EM7 DBs
      ansible.builtininclude_tasks: task_restart_em7dbs.yml
    - name: Puppet push
      ansible.builtin.include_tasks:
        file: task_puppet_push.yml
        apply:
          vars:
            push_num: "{{ loop_item }}"
      loop: "{{ range(1, 2 + 1) | list }}"
      loop_control:
        loop_var: loop_item

- name: Enable puppet sync
  ansible.builtin.include_tasks: task_enable_puppet_sync.yml
