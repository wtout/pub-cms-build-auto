---
# Tasks to check the ReportStore status
- block:
  - name: define rly_reportstore_status
    ansible.builtin.set_fact:
      rly_reportstore_status: 'mariadb: Not found or not active'
    when: "service_status|default({})|select('search', 'mariadb: Not (found|active)')|length != 0"
  - block:
    - name: get {{ prt_designation }} portal server IP from {{ fileid }}
      ansible.builtin.shell: |
        grep -i '{{ prt_designation }}_em7_portal_server_ip' {{ fileid }}
      register: reg_prt_ip
      check_mode: no
      ignore_errors: yes
    - name: define rly_reportstore_status
      ansible.builtin.set_fact:
        rly_reportstore_status: "{{ rly_reportstore_status|default([]) + [fileid + ' is not found'] }}"
      when:
        - reg_prt_ip is failed
        - reg_prt_ip.stderr is search('No such file or directory')
    - name: get {{ prt_designation }} portal server grant from DB
      ansible.builtin.shell: |
        mysql -u {{ rly_db_user }} -p{{ rly_db_pass }} --execute="select Host,User,Password from mysql.user where user='rsuser' and host='{{ reg_prt_ip.stdout.split('=')|last }}';"
      register: reg_grant
      ignore_errors: yes
      check_mode: no
      no_log: yes
    - debug:
        msg: "{{ reg_grant|replace(rly_db_pass, 'obfuscated') }}"
    - name: define rly_reportstore_status
      ansible.builtin.set_fact:
        "rly_reportstore_status": "{{ rly_reportstore_status|default([]) + ['No grants for ' + prt_designation + '_em7_portal_server_ip' + (' with IP ' + reg_prt_ip.stdout.split('=')|last if reg_prt_ip is succeeded else '')] }}"
      when: reg_grant.stdout == ''
    when:
      - "service_status|default({})|select('search', 'mariadb: Not found')|length == 0"
      - "service_status|default({})|select('search', 'mariadb: Not active')|length == 0"
  vars:
    fileid: '/opt/puppet/var/data.conf'
  tags: sanity
  