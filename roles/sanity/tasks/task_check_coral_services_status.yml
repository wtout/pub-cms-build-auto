---
# Tasks to check coral services status
- block:
  - name: check if coral container is up
    ansible.builtin.shell: |
      {{ 'sudo -S' if ansible_user != 'root' else '' }} $(which docker) ps {{ '<<< ' + ansible_ssh_pass if ansible_user != 'root' else '' }}
    register: reg_docker_ps
    args:
      warn: false
    check_mode: no
    no_log: yes
  - debug:
      msg: "{{ reg_docker_ps|replace(ansible_ssh_pass, 'obfuscated') }}"
  - name: define rly_coral_container_status
    ansible.builtin.set_fact:
      rly_coral_container_status: 'Coral container is not up'
    when: reg_docker_ps.stdout_lines|last is not regex('ago[\\s]+Up[\\s][0-9]+')
  - block:
    - name: check coral services on the container
      ansible.builtin.shell: |
        {{ 'sudo -S' if ansible_user != 'root' else '' }} docker exec {{ (reg_docker_ps.stdout.split('\n')|last).split('   ') | select() | last }} supervisorctl status {{ '<<< ' + ansible_ssh_pass if ansible_user != 'root' else '' }} | awk '{print $1" "$2}'
      register: reg_coral_services
      args:
        warn: false
      check_mode: no
      no_log: yes
    - debug:
        msg: "{{ reg_coral_services|replace(ansible_ssh_pass, 'obfuscated') }}"
    - block:
      - name: get the faulty services list
        ansible.builtin.set_fact:
          flty_svc_list: "{{ flty_svc_list|default([]) | union([svc_item.split(' ')|first]) }}"
        loop: "{{ reg_coral_services.stdout_lines | symmetric_difference(rly_coral_services) }}"
        loop_control:
          loop_var: svc_item
      - include_tasks:
          file: task_check_service_state.yml
          apply:
            vars:
              svc_name: "{{ svc_item }}"
              reg_svc_list: "{{ reg_coral_services.stdout_lines }}"
              def_svc_list: "{{ rly_coral_services }}"
        loop: "{{ flty_svc_list }}"
        loop_control:
          loop_var: svc_item
      when: reg_coral_services.stdout_lines | symmetric_difference(rly_coral_services) | length >= 1
    when:
      - reg_docker_ps.stdout_lines|last is regex('ago[\\s]+Up[\\s][0-9]+')
  when:
    - service_status|default({})|select('search', 'docker is not found')|length == 0
  tags: sanity
