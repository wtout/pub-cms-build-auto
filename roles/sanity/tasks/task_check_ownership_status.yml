---
# Tasks to check ownership status
- name: Check ownership
  vars:
    rly_list:
      - { name: '/opt/splunk/*', user: 'splunk', group: 'splunk' }
      - { name: '/opt/trapserverlogs/', user: 'root', group: 'root' }
      - { name: '/opt/trapserverlogs/*', user: 'root', group: 'root' }
      - { name: '/data01/cmcs-seed/*', user: 'cmcs_usr', group: 'cmcs_usr' }
      - { name: '/data01/CMSData/*', user: 'splunk', group: 'splunk' }
      - { name: '/data01/syslogs/', user: 'splunk', group: 'splunk' }
      - { name: '/data01/commands/', user: 'commands', group: 'commands' }
      - { name: '/data01/commands/app', user: 'commands', group: 'commands' }
      - { name: '/data01/commands/app/*', user: 'commands', group: 'commands' }
      - { name: '/data01/commands/db', user: 'commands', group: 'commands' }
      - { name: '/data01/commands/db/*', user: 'commands', group: 'commands' }
      - { name: '/data01/commands/logs', user: 'commands', group: 'commands' }
      - { name: '/data01/commands/logrotate.app.d', user: 'commands', group: 'commands' }
      - { name: '/data01/commands/logrotate.app.d/*', user: 'commands', group: 'commands' }
    splsrc_list:
      - { name: '/opt/splunk/etc/apps/*', user: 'splunk', group: 'splunk' }
      - { name: '/opt/splunk/var/log/', user: 'splunk', group: 'splunk' }
      - { name: '/opt/splunk/var/log/*', user: 'splunk', group: 'splunk' }
      - { name: '/opt/splunk/etc/', user: 'splunk', group: 'splunk' }
      - { name: '/opt/splunk/etc/*', user: 'splunk', group: 'splunk' }
    spldpl_list:
      - { name: '/opt/splunk/etc/shcluster/apps/*', user: 'splunk', group: 'splunk' }
      - { name: '/opt/splunk/var/log/', user: 'splunk', group: 'splunk' }
      - { name: '/opt/splunk/var/log/*', user: 'splunk', group: 'splunk' }
      - { name: '/opt/splunk/etc/', user: 'splunk', group: 'splunk' }
      - { name: '/opt/splunk/etc/*', user: 'splunk', group: 'splunk' }
    splmas_list:
      - { name: '/opt/splunk/etc/master-apps/*', user: 'splunk', group: 'splunk' }
      - { name: '/opt/splunk/var/log/', user: 'splunk', group: 'splunk' }
      - { name: '/opt/splunk/var/log/*', user: 'splunk', group: 'splunk' }
      - { name: '/opt/splunk/etc/', user: 'splunk', group: 'splunk' }
      - { name: '/opt/splunk/etc/*', user: 'splunk', group: 'splunk' }
    splind_list:
      - { name: '/opt/splunk/etc/slave-apps/*', user: 'splunk', group: 'splunk' }
      - { name: '/opt/splunk/var/log/', user: 'splunk', group: 'splunk' }
      - { name: '/opt/splunk/var/log/*', user: 'splunk', group: 'splunk' }
      - { name: '/opt/splunk/etc/', user: 'splunk', group: 'splunk' }
      - { name: '/opt/splunk/etc/*', user: 'splunk', group: 'splunk' }
  block:
    - name: Define directory list
      ansible.builtin.set_fact:
        dir_list: "{{ rly_list if vm.name is search('rly') and vm.name is not search('ata') else splsrc_list if vm.name is search('splsrc') or (vm.name is search('spl') and vm.name is search('aio')) else spldpl_list if vm.name is search('spldpl') else splmas_list if vm.name is search('splmas') else splind_list if vm.name is search('splind') else [] }}" # noqa: yaml[line-length]
     # yamllint disable rule:line-length
    - name: Check ownership status
      ansible.builtin.shell: |
        {{ 'sudo -S' if ansible_user != 'root' else '' }} ls -l{{ 'd' if dir_item.name[-1] != '*' else '' }} {{ dir_item.name if dir_item.name[-1] != '*' else dir_item.name[:-1] }} {{ '<<< ' + ansible_ssh_pass if ansible_user != 'root' else '' }}  | grep -v total | awk '{print $3" "$4" {{ dir_item.name[:-1] if dir_item.name[-1] == '*' else '' }}"$NF}'
      args:
        warn: false
      loop: "{{ dir_list }}"
      loop_control:
        loop_var: dir_item
      register: reg_dir_status
      changed_when: false
      ignore_errors: true
      check_mode: false
      no_log: "{{ true if ansible_user != 'root' else false }}"
      # yamllint enable rule:line-length
    - name: Define ownership status
      ansible.builtin.set_fact:
        ownership_status: "{{ ownership_status | default([]) | union([(dir_item.name if dir_item.name[-1] != '*' else dir_item.name[:-1]) + ' is not found']) }}" # noqa: yaml[line-length]
      when:
        - reg_dir_status.results | selectattr('dir_item', 'equalto', dir_item) | map(attribute='stderr') | list | join is search('No such file or directory')
      loop: "{{ dir_list }}"
      loop_control:
        loop_var: dir_item
    - name: Define ownership status
      ansible.builtin.set_fact:
        ownership_status: "{{ ownership_status | default([]) + ['Wrong ownership: ' + dir_ownership | join(', ')] }}"
      vars:
        dir_ownership: "{{ reg_dir_status.results | selectattr('dir_item', 'equalto', dir_item) | map(attribute='stdout_lines') | first | reject('search', dir_item.user + ' ' + dir_item.group) | list }}" # noqa: yaml[line-length]
      loop: "{{ dir_list }}"
      loop_control:
        loop_var: dir_item
      when:
        - dir_ownership | length != 0
