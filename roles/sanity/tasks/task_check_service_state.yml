---
# Tasks to check coral services state
- block:
  - name: check if {{ svc_name }} is an expected service
    ansible.builtin.set_fact:
      svc_expected: "{{ true if def_svc_list | select('search', svc_name) | length == 1 else false }}"
  - name: check if {{ svc_name }} is a registered service
    ansible.builtin.set_fact:
      svc_registered: "{{ true if reg_svc_list | select('search', svc_name) | length == 1 else false }}"
  - name: define rly_coral_services_status
    ansible.builtin.set_fact:
      rly_coral_services_status: "{{ rly_coral_services_status|default([]) + [svc_name + ' is not running in the container'] }}"
    when:
      - svc_expected
      - not svc_registered
  - name: define rly_coral_services_status
    ansible.builtin.set_fact:
      rly_coral_services_status: "{{ rly_coral_services_status|default([]) + [svc_name + ' is not expected in the container'] }}"
    when:
      - not svc_expected
      - svc_registered
  - name: define rly_coral_services_status
    ansible.builtin.set_fact:
      rly_coral_services_status: "{{ rly_coral_services_status|default([]) + [svc_name + ' expected state is ' + (def_svc_list|select('search', svc_name)|join).split(' ')|last + ', got ' + (reg_svc_list|select('search', svc_name)|join).split(' ')|last] }}"
    when:
      - svc_expected
      - svc_registered
      - (def_svc_list|select('search', svc_name)|join).split(' ')|last != (reg_svc_list|select('search', svc_name)|join).split(' ')|last
  tags: sanity
