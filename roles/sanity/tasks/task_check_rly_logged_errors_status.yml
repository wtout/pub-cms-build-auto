---
# Tasks to check logged errors status
- name: Check for errors in log files
  ansible.builtin.shell:
    cmd: set -o pipefail && {{ 'sudo -S' if ansible_user != 'root' else '' }} grep -i error {{ fileid }} {{ mypassstr }} | grep -v ansible
    executable: /bin/bash
  vars:
    mypassstr: "{{ '<<< ' + ansible_password if ansible_user != 'root' else '' }}"
  register: reg_err_status
  changed_when: false
  ignore_errors: true
  check_mode: false
  no_log: "{{ true if ansible_user != 'root' else false }}"
  loop:
    - /var/log/messages
    - /opt/CSCO-CMS/relayweb/log/relayweb.log
    - /opt/CSCO-CMS/relaysnmp/log/trapprocessor.log
    - /var/log/mysql/mysql.error.log
  loop_control:
    loop_var: fileid
- name: Debug message
  ansible.builtin.debug:
    msg: "{{ reg_err_status.results | replace(ansible_password, 'obfuscated') }}"
  when: ansible_user != 'root'

- name: Define rly_errors_status
  ansible.builtin.set_fact:
    rly_errors_status: "{{ rly_errors_status | default([]) + [file_stderr | regex_replace('^.*password for.*?: ', '') | replace('grep: ', '') if file_stderr | regex_replace('^.*password for.*?: ', '') != '' else ('Errors detected in ' + file_item) if file_stdout != '' else ''] | select() | list }}" # noqa: yaml[line-length]
  vars:
    file_stdout: "{{ reg_err_status.results | selectattr('fileid', 'equalto', file_item) | map(attribute='stdout') | join }}"
    file_stderr: "{{ reg_err_status.results | selectattr('fileid', 'equalto', file_item) | map(attribute='stderr') | join }}"
  loop:
    - /var/log/mysql/messages
    - /opt/CSCO-CMS/relayweb/log/relayweb.log
    - /opt/CSCO-CMS/relaysnmp/log/trapprocessor.log
    - /var/log/mysql/mysql.error.log
  loop_control:
    loop_var: file_item
