---
# Tasks to update VM password
- name: Update VM password
  when:
    - (inventory_hostname is search('splfwd') and reg_cust_creds is succeeded) or (inventory_hostname is not search('splfwd') and reg_core_creds is succeeded)
  block:
    - name: Read credentials obtained from keeper
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          ANSIBLE_LOG_PATH={{ lookup('env', 'HOME') }}/{{ automation_reponame }}/{{ lookup('env', 'ANSIBLE_LOG_PATH') }}
          export ANSIBLE_LOG_PATH
          head -1 ssh_passwords.yml | grep '$ANSIBLE_VAULT' 1&2>/dev/null && \
          ansible-vault view ssh_passwords.yml --vault-password-file ssh-vault-password-file
        executable: /bin/bash
        chdir: "{{ spl_ansible_path }}"
      register: reg_read_creds
      changed_when: false
      no_log: true
      delegate_to: localhost
      run_once: true

    - name: Updating VM password
      when: reg_read_creds is succeeded
      block:
        - name: Switch to credentials obtained from keeper
          ansible.builtin.set_fact:
            ansible_user: "{{ (reg_read_creds.stdout_lines | select('search', 'ansible_user') | first).split(': ') | last }}"
            ansible_ssh_pass: "{{ (reg_read_creds.stdout_lines | select('search', 'ansible_password') | first).split(': ') | last | replace('\"', '') }}"
          no_log: true
        - name: Check connection
          ansible.builtin.wait_for_connection:
            timeout: 3
          register: reg_vm_connection
          ignore_errors: true
          check_mode: false
        - name: Update VM password
          when: reg_vm_connection is failed
          block:
            - name: Revert user
              ansible.builtin.set_fact:
                ansible_user: "{{ vm_svc_user }}"
                ansible_ssh_pass: "{{ vm_svc_pass }}"
              no_log: true
            - name: Update credentials on VM
              ansible.builtin.user:
                name: "{{ (reg_read_creds.stdout_lines | select('search', 'ansible_user') | first).split(': ') | last }}"
                password: "{{ (reg_read_creds.stdout_lines | select('search', 'ansible_password') | first).split(': ') | last | replace('\"', '') | password_hash('sha512') }}" # noqa: yaml[line-length]
              become: true
            - name: Update VM's credentials
              ansible.builtin.set_fact:
                ansible_user: "{{ (reg_read_creds.stdout_lines | select('search', 'ansible_user') | first).split(': ') | last }}"
                ansible_ssh_pass: "{{ (reg_read_creds.stdout_lines | select('search', 'ansible_password') | first).split(': ') | last | replace('\"', '') }}"
              no_log: true
        - name: Validate connection credentials
          ansible.builtin.shell: |
            ls
          register: validate_cred
          changed_when: false
