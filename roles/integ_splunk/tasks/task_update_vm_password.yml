---
# Tasks to update VM password
- block:
  - block:
    - name: Read credentials obtained from keeper
      ansible.builtin.shell: |
        ANSIBLE_LOG_PATH={{ lookup('env', 'HOME') }}/{{ automation_reponame }}/{{ lookup('env', 'ANSIBLE_LOG_PATH') }}
        export ANSIBLE_LOG_PATH
        head -1 ssh_passwords.yml | grep '$ANSIBLE_VAULT' 1&2>/dev/null && ansible-vault view ssh_passwords.yml --vault-password-file ssh-vault-password-file
      args:
        chdir: "{{ spl_ansible_path }}"
      register: reg_read_creds
      no_log: true
    delegate_to: localhost
    run_once: true

  - block:
    - name: switch to credentials obtained from keeper
      ansible.builtin.:
        ansible_user: "{{ (reg_read_creds.stdout_lines | select('search', 'ansible_user') | first).split(': ') | last }}"
        ansible_ssh_pass: "{{ (reg_read_creds.stdout_lines | select('search', 'ansible_password') | first).split(': ') | last | replace('\"', '') }}"
      no_log: true
    - name: check connection
      ansible.builtin.wait_for_connection:
        timeout: 3
      register: reg_vm_connection
      ignore_errors: true
      check_mode: no
    - block:
      - name: revert user
        ansible.builtin.:
          ansible_user: "{{ vm_svc_user }}"
          ansible_ssh_pass: "{{ vm_svc_pass }}"
        no_log: true
      - name: update credentials on VM
        ansible.builtin.user:
          name: "{{ (reg_read_creds.stdout_lines | select('search', 'ansible_user') | first).split(': ') | last }}"
          password: "{{ (reg_read_creds.stdout_lines | select('search', 'ansible_password') | first).split(': ') | last | replace('\"', '') | password_hash('sha512') }}"
        become: yes
      - name: Update VM's credentials
        ansible.builtin.:
          ansible_user: "{{ (reg_read_creds.stdout_lines | select('search', 'ansible_user') | first).split(': ') | last }}"
          ansible_ssh_pass: "{{ (reg_read_creds.stdout_lines | select('search', 'ansible_password') | first).split(': ') | last | replace('\"', '') }}"
        no_log: true
      when: reg_vm_connection is failed
    - ansible.builtin.shell: |
        ls
    when: reg_read_creds is succeeded
  when: (inventory_hostname is search('splfwd') and reg_cust_creds is succeeded) or (inventory_hostname is not search('splfwd') and reg_core_creds is succeeded)
  tags: integ_splunk
