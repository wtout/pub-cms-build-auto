---
# tasks to deploy threatq
- name: Deploy threatq
  when:
    - groups['splsvc'] is defined
    - inventory_hostname is not search('splfwd')
  delegate_to: localhost
  run_once: true
  block:
    - name: Switch branch
      ansible.builtin.include_tasks:
        file: task_switch_branch.yml
        apply:
          vars:
            branch_name: 'threatq'
            repo_name: "{{ mdr_automation_reponame }}"
      when: clone_repos is succeeded
    - name: Update python3 command
      ansible.builtin.include_tasks: task_update_python3_cmd.yml
    - name: Setup environment
      ansible.builtin.include_tasks: task_setup_env.yml
      when: clone_repos.results | selectattr('repo_item', 'search', mdr_automation_reponame) | map(attribute='changed') | list | join | bool
    - name: Create inventory
      ansible.builtin.include_tasks:
        file: task_create_inventory.yml
        apply:
          vars:
            build_svc: true
    - name: Update ansible.cfg
      ansible.builtin.include_tasks: task_update_ansible_cfg.yml
    - name: Get creds from keeper
      ansible.builtin.include_tasks: task_get_creds_from_keeper.yml
    - name: Update variables files
      ansible.builtin.include_tasks: task_update_variables_files.yml
    - name: Deploy the indexer changes
      ansible.builtin.shell: |
        ANSIBLE_LOG_PATH={{ lookup('env', 'HOME') }}/{{ automation_reponame }}/{{ lookup('env', 'ANSIBLE_LOG_PATH') }}
        DEPLOY_HOME={{ spl_wd }}
        export ANSIBLE_LOG_PATH DEPLOY_HOME
        ./deploy_cm.sh  --environment={{ customer.env_identifier }} --corepass=vault-password-file --extras="--extra-vars @ssh_passwords.yml \
        --vault-password-file {{ auto_dir }}/Bash/get_common_vault_pass.sh" 1>/dev/null
      args:
        chdir: "{{ spl_ansible_path }}"
      register: reg_deploy_indexer_changes
      changed_when: reg_deploy_indexer_changes.rc == 0
    - name: Build the SVCs Forwarder
      ansible.builtin.shell: |
        ANSIBLE_LOG_PATH={{ lookup('env', 'HOME') }}/{{ automation_reponame }}/{{ lookup('env', 'ANSIBLE_LOG_PATH') }}
        DEPLOY_HOME={{ spl_wd }}
        export ANSIBLE_LOG_PATH DEPLOY_HOME
        ./build_core.sh  --environment={{ customer.env_identifier }} --corepass=vault-password-file --skippushtoindexer --skippushtosearch --skipphantom \
        --skipphantomconfig --skipjoincore --extras="--extra-vars @ssh_passwords.yml --vault-password-file {{ auto_dir }}/Bash/get_common_vault_pass.sh \
        --limit {{ hostvars[groups['splsvc'] | first]['vm']['name'] }}" 1>/dev/null
      args:
        chdir: "{{ spl_ansible_path }}"
      register: reg_build_svcs_forwarder
      changed_when: reg_build_svcs_forwarder.rc == 0
    - name: Deploy the SVCs Changes
      ansible.builtin.shell: |
        ANSIBLE_LOG_PATH={{ lookup('env', 'HOME') }}/{{ automation_reponame }}/{{ lookup('env', 'ANSIBLE_LOG_PATH') }}
        DEPLOY_HOME={{ spl_wd }}
        export ANSIBLE_LOG_PATH DEPLOY_HOME
        ./deploy_svcs.sh  --environment={{ customer.env_identifier }} --corepass=vault-password-file --extras="--extra-vars @ssh_passwords.yml \
        --vault-password-file {{ auto_dir }}/Bash/get_common_vault_pass.sh" 1>/dev/null
      args:
        chdir: "{{ spl_ansible_path }}"
      register: reg_deploy_svcs_changes
      changed_when: reg_deploy_svcs_changes.rc == 0
    - name: Deploy the SHC Changes
      ansible.builtin.shell: |
        ANSIBLE_LOG_PATH={{ lookup('env', 'HOME') }}/{{ automation_reponame }}/{{ lookup('env', 'ANSIBLE_LOG_PATH') }}
        DEPLOY_HOME={{ spl_wd }}
        export ANSIBLE_LOG_PATH DEPLOY_HOME
        ./deploy_shc.sh  --environment={{ customer.env_identifier }} --corepass=vault-password-file --extras="--extra-vars @ssh_passwords.yml -\
        -vault-password-file {{ auto_dir }}/Bash/get_common_vault_pass.sh" 1>/dev/null
      args:
        chdir: "{{ spl_ansible_path }}"
      register: reg_deploy_shc_changes
      changed_when: reg_deploy_shc_changes.rc == 0
    - name: Deploy the Phantom Changes
      ansible.builtin.shell: |
        ANSIBLE_LOG_PATH={{ lookup('env', 'HOME') }}/{{ automation_reponame }}/{{ lookup('env', 'ANSIBLE_LOG_PATH') }}
        DEPLOY_HOME={{ spl_wd }}
        export ANSIBLE_LOG_PATH DEPLOY_HOME
        ./config_phantom.sh  --environment={{ customer.env_identifier }} --corepass=vault-password-file --extras="--extra-vars @ssh_passwords.yml \
        --vault-password-file {{ auto_dir }}/Bash/get_common_vault_pass.sh" 1>/dev/null
      args:
        chdir: "{{ spl_ansible_path }}"
      register: reg_deploy_phantom_changes
      changed_when: reg_deploy_phantom_changes.rc == 0
