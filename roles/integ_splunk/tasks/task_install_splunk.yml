---
# Tasks to install Splunk on hosts
- block:
  - name: remove log file definition from {{ spl_ansible_path }}/ansible.cfg
    lineinfile:
      path: "{{ spl_ansible_path }}/ansible.cfg"
      regex: '^log_path ='
      state: absent
  - name: Get Ansible Log file name
    shell: echo ${ANSIBLE_LOG_PATH}
    register: log_file_name
    check_mode: no
    args:
      chdir: "{{ spl_ansible_path }}"
  - name: Deploy Splunk headend (core)
    shell: |
      export ANSIBLE_LOG_PATH={{ log_file_name.stdout }}
      ./buildcore.sh  --inv=inventory/cisco_inventory/{{ he_inv_file_name }} --defaults=default.yml  --corepass=vault-password-file --extras="--extra-vars @ssh_passwords.yml --vault-password-file {{ auto_dir }}/Bash/get_common_vault_pass.sh" 1>/dev/null
    register: he_install
    args:
      chdir: "{{ spl_ansible_path }}"
    when: inventory_hostname is not search('splfwd')
  - block:
    - name: check if headend inventory file exists
      stat:
        path: "{{ spl_ansible_path }}/inventory/cisco_inventory/{{ he_inv_file_name }}"
      register: he_inv1
    - block:
      - include_tasks: task_create_headend_inventory_file.yml
      - name: check if headend inventory file exists
        stat:
          path: "{{ spl_ansible_path }}/inventory/cisco_inventory/{{ he_inv_file_name }}"
        register: he_inv2
      when: not he_inv1.stat.exists
    - name: fail if Headend inventory file is not found
      assert:
        that: he_inv1.stat.exists or he_inv2.stat.exists
        fail_msg: "The headend inventory file is not available. Unable to deploy a customer forwarder without a Headend. Aborting!"
    - name: Deploy Splunk heavy forwarder (customer)
      shell: |
        export ANSIBLE_LOG_PATH={{ log_file_name.stdout }}
        ./buildcustomer.sh  --inv=inventory/cisco_inventory/{{ he_inv_file_name }} --invcustomer=inventory/cisco_inventory/{{ cu_inv_file_name }} --defaults=default.yml  --corepass=vault-password-file --extras="--extra-vars @ssh_passwords.yml --vault-password-file {{ auto_dir }}/Bash/get_common_vault_pass.sh" 1>/dev/null
      register: cu_install
      args:
        chdir: "{{ spl_ansible_path }}"
    when: inventory_hostname is search('splfwd')
  - name: define delete_proxy
    set_fact:
      delete_proxy: "{{ he_install is succeeded or cu_install is succeeded }}"
  delegate_to: localhost
  run_once: true
  tags: integ_splunk