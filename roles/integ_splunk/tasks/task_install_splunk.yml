---
# Tasks to install Splunk on hosts
- block:
  - name: remove log file definition from {{ spl_ansible_path }}/ansible.cfg
    lineinfile:
      path: "{{ spl_ansible_path }}/ansible.cfg"
      regex: '^log_path ='
      state: absent
  - name: Get Ansible Log file name
    shell: echo ${ANSIBLE_LOG_PATH}
    register: log_file_name
    check_mode: no
    args:
      chdir: "{{ spl_ansible_path }}"
  - name: Deploy Splunk headend (core)
    shell: |
      ANSIBLE_LOG_PATH={{ log_file_name.stdout }}
      DEPLOY_HOME={{ spl_wd }}
      export ANSIBLE_LOG_PATH DEPLOY_HOME
      ./build_core.sh  --environment={{ customer.env_identifier }} --corepass=vault-password-file --extras="--extra-vars @ssh_passwords.yml --vault-password-file {{ auto_dir }}/Bash/get_common_vault_pass.sh" 1>/dev/null
    register: he_install
    args:
      chdir: "{{ spl_ansible_path }}"
    when: inventory_hostname is not search('splfwd')
  - name: Deploy Splunk heavy forwarder (customer)
    shell: |
      ANSIBLE_LOG_PATH={{ log_file_name.stdout }}
      DEPLOY_HOME={{ spl_wd }}
      export ANSIBLE_LOG_PATH DEPLOY_HOME
      ./build_customer.sh  --environment={{ customer.env_identifier }} --corepass=vault-password-file --extras="--extra-vars @ssh_passwords.yml --vault-password-file {{ auto_dir }}/Bash/get_common_vault_pass.sh" 1>/dev/null
    register: cu_install
    args:
      chdir: "{{ spl_ansible_path }}"
    when: inventory_hostname is search('splfwd')
  - name: define delete_proxy
    set_fact:
      delete_proxy: "{{ he_install is succeeded or cu_install is succeeded }}"
  delegate_to: localhost
  run_once: true
  tags: integ_splunk