---
# handlers file for vm_configuration
- name: Restart chrony
  ansible.builtin.systemd:
    name: chronyd
    state: restarted
    daemon_reload: true
  become: "{{ true if ansible_user != 'root' else false }}"

- name: Yum clean all
  ansible.builtin.command: yum clean all
  register: yum_clean
  changed_when: yum_clean.rc == 0
  become: "{{ true if ansible_user != 'root' else false }}"

- name: Restart snmpd service
  ansible.builtin.systemd:
    name: snmpd
    state: restarted
    daemon_reload: true
  become: "{{ true if ansible_user != 'root' else false }}"

- name: Restart drbd
  ansible.builtin.systemd:
    name: drbd
    state: restarted
    daemon_reload: true
  become: "{{ true if ansible_user != 'root' else false }}"
  notify:
    - Mount drbd1
    - Start mysql
    - Start em7
    - Restart pacemaker
    - Restart corosync
# yamllint disable rule:line-length
- name: Mount drbd1
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      {{ 'drbd-overview | grep -i secondary/secondary' if customer.version.release is not search('9.2') else '/sbin/drbdadm status | grep -i r0 | cut -d ":" -f2 | grep -i secondary && /sbin/drbdadm status | grep -i "peer " | cut -d ":" -f2 | grep -i secondary' }} && /sbin/drbdadm primary r0
      mount /dev/drbd1 /data.local/db
      df | grep /drbd1
    executable: /bin/bash
  register: drbd1_status
  changed_when: drbd1_status.rc == 0
  become: "{{ true if ansible_user != 'root' else false }}"
  until: drbd1_status.stdout is regex('drbd1|Secondary')
  failed_when: drbd1_status.stdout is not regex('drbd1|Secondary')
  retries: 3
  when:
    - not ansible_check_mode
    - inventory_hostname is search('01')
# yamllint enable rule:line-length

- name: Start mysql
  ansible.builtin.systemd:
    name: mysql
    state: started
  become: "{{ true if ansible_user != 'root' else false }}"
  when:
    - inventory_hostname is search('01')
    - drbd1_status.stdout is not search('Secondary')

- name: Start em7
  ansible.builtin.systemd:
    name: em7
    state: started
  become: "{{ true if ansible_user != 'root' else false }}"
  when: inventory_hostname is search('01')

- name: Restart pacemaker
  ansible.builtin.systemd:
    name: pacemaker
    state: restarted
    daemon_reload: true
  become: "{{ true if ansible_user != 'root' else false }}"
  register: pacemaker_status
  until: pacemaker_status is succeeded

- name: Restart corosync
  ansible.builtin.systemd:
    name: corosync
    state: restarted
    daemon_reload: true
  become: "{{ true if ansible_user != 'root' else false }}"

- name: Start nfs
  ansible.builtin.systemd:
    name: nfs
    state: started
  become: "{{ true if ansible_user != 'root' else false }}"

- name: Restart network
  ansible.builtin.systemd:
    name: network
    state: restarted
    daemon_reload: true
  become: "{{ true if ansible_user != 'root' else false }}"

- name: Restart firewalld
  ansible.builtin.systemd:
    name: firewalld
    state: restarted
    daemon_reload: true
  become: "{{ true if ansible_user != 'root' else false }}"
