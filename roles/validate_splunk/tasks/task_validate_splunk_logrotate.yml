---
# Tasks to validate Splunk logrotate
- block:
  - name: check /etc/rsyslog.conf
    ansible.builtin.shell: |
      grep cmskern /etc/rsyslog.conf
    register: reg_rsyslog1
    check_mode: no
    ignore_errors: yes
  - name: check /etc/logrotate.d/syslog
    ansible.builtin.shell: |
      grep cmskern /etc/logrotate.d/syslog
    register: reg_syslog1
    check_mode: no
    ignore_errors: yes
  - block:
    - ansible.builtin.debug:
        msg:
          - 'Splunk logrotate validation failed'
          - "{{ reg_rsyslog1.stdout if reg_rsyslog1 is failed else '' }}"
          - "{{ reg_syslog1.stdout if reg_syslog1 is failed else '' }}"
    - name: delete /opt/puppet/var/rsyslog_update.done file
      ansible.builtin.file:
        path: '/opt/puppet/var/rsyslog_update.done'
        state: absent
    - name: trigger a puppet push
      ansible.builtin.shell:
        /usr/local/bin/puppet agent --server {{ puppet.secondary.fqdn if 'dr' in group_names else puppet.primary.fqdn }} --test
      register: reg_puppet_push
      no_log: true
      failed_when:
        - reg_puppet_push.stdout is not search('Run of Puppet configuration client already in progress')
        - reg_puppet_push.stdout is not search('Applied catalog in')
    - debug:
        msg:
          - "{{ reg_puppet_push.stdout }}"
      when:
        - reg_puppet_push.stdout_lines is defined
        - reg_puppet_push.stdout_lines == [] or reg_puppet_push.stdout_lines|last is not search('Applied catalog')
    - debug:
        msg:
          - "{{ reg_puppet_push.stdout_lines|last | regex_replace('^.*(Notice.*seconds).*$', '\\1') }}"
      when:
        - reg_puppet_push.stdout_lines is defined
        - reg_puppet_push.stdout_lines != []
        - reg_puppet_push.stdout_lines|last is search('Applied catalog')
    - name: recheck /etc/rsyslog.conf
      ansible.builtin.shell: |
        grep cmskern /etc/rsyslog.conf
      register: reg_rsyslog2
      check_mode: no
    - name: recheck /etc/logrotate.d/syslog
      ansible.builtin.shell: |
        grep cmskern /etc/logrotate.d/syslog
      register: reg_syslog2
      check_mode: no
    when:
      - reg_rsyslog1 is failed or reg_syslog1 is failed
  tags: [ 'validate_splunk', 'never' ]
