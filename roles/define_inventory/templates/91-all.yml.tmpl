---
# Variables for all hosts

##################################################################################
# Customer specific information
##################################################################################
customer:

  # Official build name
  name: '{{ environment_definition.customer.name }}'

  # Disaster recovery (boolean yes/no)
  disaster_recovery: {{ environment_definition.customer.disaster_recovery }}

  version:

    # Platform Release version (string)
    release: '{{ environment_definition.customer.version.release }}'

    # EM7 ISO (string)
    em7_iso: '{{ environment_definition.customer.version.em7_iso if environment_definition.customer.version.em7_iso != none else 'em7_x86_64_8.12.0-1191.iso' }}'

    # CentOS ISO (string)
    centos_iso: '{{ environment_definition.customer.version.centos_iso if environment_definition.customer.version.centos_iso != none else 'CentOS-7-x86_64-DVD-1908.iso' }}'

  primary:

    # Primary name prefix
    name_prefix: '{{ environment_definition.customer.primary.name_prefix }}'

    # Primary first 3 octets
    octets: '{{ environment_definition.customer.primary.octets }}'

  secondary:

    # Secondary name prefix
    name_prefix: '{{ environment_definition.customer.secondary.name_prefix if environment_definition.customer.disaster_recovery else "" }}'

    # Secondary first 3 octets
    octets: '{{ environment_definition.customer.secondary.octets if environment_definition.customer.disaster_recovery else "" }}'


##################################################################################
# Datacenter where the stack is to be built
##################################################################################
datacenter:

  primary:

    # Available datacenters: RTP-Staging, PAE-HX-DC-1, PAE-HX-DC-2, PAE-HX-DC-3, Plat-Ops, Dev Engineering, cdra-Build-Development, PAE-Customer-Build, RTP5, Alln1 (string)
    name: '{{ environment_definition.datacenter.primary.name }}'

    # Required if a custom cluster name is to be used
    # The primary cluster to host the customer's primary stack
    cluster: '{{ environment_definition.datacenter.primary.cluster if environment_definition.datacenter.primary.cluster != none else "" }}'

    # ONLY for on-premise deployments, define the list of esxi hosts (resources) to use (string)
    # For hosted deployments DO NOT TOUCH
    # Use ',', ';' or space as separator when you have more than one host
    resources: [ '{{ primary_resources|join(',')|replace(",", "', '") if (environment_definition.customer.deployment_model is regex('a|u') and environment_definition.customer.deployment_model is not search('h')) else "" }}' ]

    # ONLY for on-premise deployments, define the VLAN IDs to use (string)
    # For hosted deployments DO NOT TOUCH
    internal_net_vlan_id: '{{ environment_definition.datacenter.primary.internal_net_vlan_id if environment_definition.datacenter.primary.internal_net_vlan_id is defined and environment_definition.datacenter.primary.internal_net_vlan_id != none else "" }}'
    loadbalancer_net_vlan_id: '{{ environment_definition.datacenter.primary.loadbalancer_net_vlan_id if environment_definition.datacenter.primary.loadbalancer_net_vlan_id is defined and environment_definition.datacenter.primary.loadbalancer_net_vlan_id != none else "" }}'
    customer_net_inside_vlan_id: '{{ environment_definition.datacenter.primary.customer_net_inside_vlan_id if environment_definition.datacenter.primary.customer_net_inside_vlan_id is defined and environment_definition.datacenter.primary.customer_net_inside_vlan_id != none else "" }}'
    em7db_heartbeat_link_vlan_id: '{{ environment_definition.datacenter.primary.em7db_heartbeat_link_vlan_id if environment_definition.datacenter.primary.em7db_heartbeat_link_vlan_id is defined and environment_definition.datacenter.primary.em7db_heartbeat_link_vlan_id != none else "" }}'

  secondary:

    # Available datacenters: RTP-Staging, PAE-HX-DC-1, PAE-HX-DC-2, PAE-HX-DC-3, Plat-Ops, Dev Engineering, cdra-Build-Development, PAE-Customer-Build, RTP5, Alln1 (string)
    name: '{{ environment_definition.datacenter.secondary.name }}'

    # Required if a custom cluster name is to be used
    # The secondary cluster to host the customer's secondary stack
    cluster: '{{ environment_definition.datacenter.secondary.cluster if environment_definition.datacenter.secondary.cluster != none else "" }}'

    # ONLY for on-premise deployments, define the list of esxi hosts (resources) to use (string)
    # For hosted deployments DO NOT TOUCH
    resources: [ '{{ secondary_resources|join(',')|replace(",", "', '") if (environment_definition.customer.disaster_recovery and environment_definition.customer.deployment_model is regex('a|u') and environment_definition.customer.deployment_model is not search('h')) else "" }}' ]

    # ONLY for on-premise deployments, define the VLAN IDs to use (string)
    # For hosted deployments DO NOT TOUCH
    internal_net_vlan_id: '{{ environment_definition.datacenter.secondary.internal_net_vlan_id if environment_definition.datacenter.secondary.internal_net_vlan_id is defined and environment_definition.datacenter.secondary.internal_net_vlan_id != none else environment_definition.datacenter.primary.internal_net_vlan_id if environment_definition.datacenter.primary.internal_net_vlan_id is defined and environment_definition.datacenter.primary.internal_net_vlan_id != none else "" }}'
    loadbalancer_net_vlan_id: '{{ environment_definition.datacenter.secondary.loadbalancer_net_vlan_id if environment_definition.datacenter.secondary.loadbalancer_net_vlan_id is defined and environment_definition.datacenter.secondary.loadbalancer_net_vlan_id != none else environment_definition.datacenter.primary.loadbalancer_net_vlan_id if environment_definition.datacenter.primary.loadbalancer_net_vlan_id is defined and environment_definition.datacenter.primary.loadbalancer_net_vlan_id != none else "" }}'
    customer_net_inside_vlan_id: '{{ environment_definition.datacenter.secondary.customer_net_inside_vlan_id if environment_definition.datacenter.secondary.customer_net_inside_vlan_id is defined and environment_definition.datacenter.secondary.customer_net_inside_vlan_id != none else environment_definition.datacenter.primary.customer_net_inside_vlan_id if environment_definition.datacenter.primary.customer_net_inside_vlan_id is defined and environment_definition.datacenter.primary.customer_net_inside_vlan_id != none else "" }}'
    em7db_heartbeat_link_vlan_id: '{{ environment_definition.datacenter.secondary.em7db_heartbeat_link_vlan_id if environment_definition.datacenter.secondary.em7db_heartbeat_link_vlan_id is defined and environment_definition.datacenter.secondary.em7db_heartbeat_link_vlan_id != none else environment_definition.datacenter.primary.em7db_heartbeat_link_vlan_id if environment_definition.datacenter.primary.em7db_heartbeat_link_vlan_id is defined and environment_definition.datacenter.primary.em7db_heartbeat_link_vlan_id != none else "" }}'


##################################################################################
# Nexus information
##################################################################################
nexus:
  address: [ '172.30.240.253', '172.30.240.254' ]


##################################################################################
# If a bastion server (a.k.a linux jump server) is to be used, the address must be provided
##################################################################################
bastion:
  address: {{ "[ '10.225.228.240' ]" if use_bastion else [] }}


##################################################################################
# System configuration variables
##################################################################################
sysconfig:

  primary:

    # DNS servers list
    dns_servers: {{ [ '172.23.251.21', '172.23.251.22' ] if environment_definition.datacenter.primary.name == 'RTP-Staging' else ['172.30.251.21', '172.30.251.22'] if environment_definition.datacenter.primary.name is regex('PAE-HX-DC-2|PAE-HX-DC-3|Dev Engineering') else ['172.19.251.21', '172.19.251.22'] }}

    # Domain name to use
    domain_name: "{{ ('staging.' if environment_definition.datacenter.primary.name == 'RTP-Staging' else '') + 'cisco-' + ('pae' if environment_definition.datacenter.primary.name is regex('PAE-HX-DC-2|PAE-HX-DC-3|Dev Engineering') else 'cms') + '.com' }}"

    # NTP server
    ntp_server: "{{ '{{ customer.primary.octets }}' + '.62' }}"

  secondary:
  
    # DNS servers list
    dns_servers: {{ ([ '172.23.251.21', '172.23.251.22' ] if environment_definition.datacenter.secondary.name == 'RTP-Staging' else ['172.30.251.21', '172.30.251.22'] if environment_definition.datacenter.secondary.name is regex('PAE-HX-DC-2|PAE-HX-DC-3|Dev Engineering') else ['172.19.251.21', '172.19.251.22']) if environment_definition.customer.disaster_recovery else ''  }}

    # Domain name to use
    domain_name: "{{ (('staging.' if environment_definition.datacenter.secondary.name == 'RTP-Staging' else '') + 'cisco-' + ('pae' if environment_definition.datacenter.secondary.name is regex('PAE-HX-DC-2|PAE-HX-DC-3|Dev Engineering') else 'cms') + '.com') if environment_definition.customer.disaster_recovery else '' }}"

    # NTP server
    ntp_server: "{{ '{{ customer.secondary.octets }}' + '.62' if environment_definition.customer.disaster_recovery else '' }}"


##################################################################################
# Puppet server information: ensure you are pointing to the correct puppet server
##################################################################################
puppet:

  primary:

    # VM name
    vmname: '{{ environment_definition.puppet.primary.server_name }}'

    # FQDN
    fqdn: '{{ environment_definition.puppet.primary.server_name + '.' + ('staging.' if environment_definition.datacenter.primary.name == 'RTP-Staging' else '') + "cisco-cms.com" }}'

    # ip address
    ipaddress: '{{ "172.23.251.38" if environment_definition.datacenter.primary.name == 'RTP-Staging' else [ "172.19.251.53", "172.19.251.59", "172.19.251.34", "172.19.251.66" ][environment_definition.puppet.primary.server_name[-1:]|int-1] }}'

  secondary:

    # VM name
    vmname: '{{ environment_definition.puppet.secondary.server_name if environment_definition.customer.disaster_recovery else "" }}'

    # FQDN
    fqdn: '{{ (environment_definition.puppet.secondary.server_name + '.' + ('staging.' if environment_definition.datacenter.secondary.name == 'RTP-Staging' else '') + "cisco-cms.com") if environment_definition.customer.disaster_recovery else "" }}'

    # ip address
    ipaddress: '{{ ("172.23.251.38" if environment_definition.datacenter.secondary.name == 'RTP-Staging' else [ "172.19.251.53", "172.19.251.59", "172.19.251.34", "172.19.251.66" ][environment_definition.puppet.secondary.server_name[-1:]|int-1]) if environment_definition.customer.disaster_recovery else "" }}'


##################################################################################
# Release Artifactory information
##################################################################################
artifactory:

  # baseurl
  baseurl: 'https://engci-maven-master.cisco.com'


##################################################################################
# Yum server information
##################################################################################
yum:

  primary:

    # baseurl
    baseurl: 'https://{{ environment_definition.yum.primary.server_name + '.' + ('staging.' if environment_definition.datacenter.primary.name == 'RTP-Staging' else '') + 'cisco-' + ('pae' if environment_definition.datacenter.primary.name is regex('PAE-HX-DC-2|Dev Engineering') else 'cms') + '.com' }}'

    # VM name
    vmname: '{{ environment_definition.yum.primary.server_name }}'

    # FQDN
    fqdn: '{{ environment_definition.yum.primary.server_name + '.' + ('staging.' if environment_definition.datacenter.primary.name == 'RTP-Staging' else '') + 'cisco-' + ('pae' if environment_definition.datacenter.primary.name is regex('PAE-HX-DC-2|Dev Engineering') else 'cms') + '.com' }}'

    # ip address
    ipaddress: '{{ "172.23.251.39" if environment_definition.datacenter.primary.name == 'RTP-Staging' else [ "172.19.251.54", "172.19.251.52" ][environment_definition.yum.primary.server_name[-1:]|int-1] }}'

  secondary:

    # baseurl
    baseurl: '{{ ('https://' + environment_definition.yum.secondary.server_name + '.' + ('staging.' if environment_definition.datacenter.secondary.name == 'RTP-Staging' else '') + 'cisco-' + ('pae' if environment_definition.datacenter.secondary.name is regex('PAE-HX-DC-2|Dev Engineering') else 'cms') + '.com') if environment_definition.customer.disaster_recovery else '' }}'

    # VM name
    vmname: '{{ environment_definition.yum.secondary.server_name if environment_definition.customer.disaster_recovery else "" }}'

    # FQDN
    fqdn: '{{ (environment_definition.yum.secondary.server_name + '.' + ('staging.' if environment_definition.datacenter.secondary.name == 'RTP-Staging' else '') + 'cisco-' + ('pae' if environment_definition.datacenter.secondary.name is regex('PAE-HX-DC-2|Dev Engineering') else 'cms') + '.com') if environment_definition.customer.disaster_recovery else "" }}'

    # ip address
    ipaddress: '{{ ("172.23.251.39" if environment_definition.datacenter.secondary.name == 'RTP-Staging' else [ "172.19.251.54", "172.19.251.52" ][environment_definition.yum.secondary.server_name[-1:]|int-1]) if environment_definition.customer.disaster_recovery else "" }}'


##################################################################################
# Splunk information. Although the values in this section do not typically change from one customer to another, ensure they are correct 
##################################################################################
splunk:

  # license master ip
  license_master_ip: '172.19.252.22'

  # head-end indexer ip (hostname)
  he_indexer01_ip: 'alln1splidxp01'
  he_indexer02_ip: ''

  # head-end search-head ip (hostname)
  he_searchhead01_ip: 'alln1splsrcp01'
  he_searchhead02_ip: 'alln1splsrcp02'

  # head-end deployment server ip
  he_deployment_server_ip: '172.19.252.21'

  # head-end deployment server hostname
  he_deployment_server: 'alln1-spl-ds-p01'

  # mom indexer ip
  mom_indexer1_ip: '172.19.252.28'
  mom_indexer2_ip: '172.19.252.29'

  # mom cluster master ip
  mom_clustermaster_ip: ''

  # tile server hostname
  tile_server: 'alln1spltlsp01'


#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@
##################################################################################
# Do NOT change anything below this line
##################################################################################
#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@

##################################################################################
# Service VIPs
##################################################################################
vip:

  # Message collectors VIP
  mc: "{{ '{{' }} customer.primary.octets {{ '}}' }}.42"

  # EM7 portals (application servers) VIP
  prt: "{{ '{{' }} customer.primary.octets {{ '}}' }}.49"

  # EM7 databases VIP
  db: "{{ '{{' }} customer.primary.octets {{ '}}' }}.40"

  # Splunk search heads VIP
  src: "{{ '{{' }} customer.primary.octets {{ '}}' }}.41"

  # Relay servers VIP
  rly: "{{ '{{' }} customer.primary.octets {{ '}}' }}.120"

  # Relay servers database VIP
  rly_db: "{{ '{{' }} customer.primary.octets {{ '}}' }}.1"



