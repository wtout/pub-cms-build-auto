---
# tasks to validate bastion credentials
- block:
  - name: Validate bastion credentials
    shell: ansible {{ bastion_host }} -i {{ auto_dir }}/$(grep "inventory =" {{ auto_dir }}/ansible.cfg | awk '{print $NF}') -m ping -e @{{ VFILE }} --vault-password-file {{ VPFILE }}
    register: bastion_creds
    failed_when: "'SUCCESS' not in bastion_creds.stdout"
    check_mode: no
    ignore_errors: true
    when:
      - hostvars[groups['bastion']|first]['ansible_user'] != ''
      - hostvars[groups['bastion']|first]['ansible_ssh_pass'] != ''
  - set_fact:
      b_list: "{{ (b_list|default('') + bastion_host) if b_list|default('') == '' else (b_list|default('') + ', ' + bastion_host) }}"
    when: "hostvars[groups['bastion']|first]['ansible_user'] == '' or hostvars[groups['bastion']|first]['ansible_ssh_pass'] == '' or bastion_creds is failed"
  - set_fact:
      abort_play: "{{ abort_play | default(false) or 'yes'|bool }}"
      err_msg: "{{ b_list }}: Incorrect/Invalid credentials"
    when: "hostvars[groups['bastion']|first]['ansible_user'] == '' or hostvars[groups['bastion']|first]['ansible_ssh_pass'] == '' or bastion_creds is failed"
  - set_fact:
      delete_creds: yes
    when: "hostvars[groups['bastion']|first]['ansible_user'] == '' or hostvars[groups['bastion']|first]['ansible_ssh_pass'] == '' or bastion_creds is failed and bastion_creds.stdout is search('Invalid/incorrect password: Permission denied')"
  tags: always
