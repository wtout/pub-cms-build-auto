---
# tasks to update /etc/hosts on VM
- block:
  - block:
    - name: define list of hosts that need /etc/hosts file
      ansible.builtin.set_fact:
        etc_hosts_hosts: "{{ (groups['stack'] + groups['dr']) | reject('search', infra_nodes|unique|join('|')) if customer.disaster_recovery and ansible_play_hosts|reject('search', 'vcenter|nexus')|sort == groups['dr']|sort else ansible_play_hosts | reject('search', 'bastion|puppet|vcenter|nexus|' + infra_nodes|unique|join('|')) }}"
      vars:
        infra_nodes: "{{ groups['infra']|regex_replace('[0-9]{2,}', '') if groups['infra'] is defined else ['none'] }}"
    - name: define loop list
      ansible.builtin.set_fact:
        loop_list: "{{ ([etc_hosts_hosts|intersect(groups['stack'])|first] if etc_hosts_hosts|intersect(groups['stack'])|length > 0 else []) | union([etc_hosts_hosts|intersect(groups['dr'])|first] if customer.disaster_recovery and etc_hosts_hosts|intersect(groups['dr'])|length > 0 else []) }}"
    - name: render hosts file
      ansible.builtin.template:
        src: "{{ role_path }}/templates/{{ customer.version.release[1:4].split('.')|join }}-{{ 'dr' if host_item is search('dr') else '' }}hosts.tmpl"
        dest: "{{ role_path }}/files/{{ 'dr' if host_item is search('dr') else '' }}hosts"
      loop: "{{ loop_list }}"
      loop_control:
        loop_var: host_item
      delegate_to: localhost
    run_once: true

  - name: Copy hosts file to VM
    ansible.builtin.copy:
      src: "{{ role_path }}/files/{{ 'dr' if inventory_hostname is search('dr') else '' }}hosts"
      dest: '/etc/hosts'
    become: "{{ true if inventory_hostname is search('em7') else false }}"
    when: not ansible_check_mode

  - block:
    - name: copy HA hosts file to DR lnxjmp
      ansible.builtin.copy:
        dest: "{{ hafiles_storage}}/hosts"
        src: "{{ role_path }}/files/hosts"
      when: not ansible_check_mode
    delegate_to: "{{ groups['drlnxjmp']|first }}"
    run_once: true
    when:
      - customer.disaster_recovery
      - hosts_in_play | difference(groups['dr']) | length == 0
      - hosts_in_play | select('search', 'drlnxjmp') | length >= 1

  - name: delete local file
    ansible.builtin.file:
      path: "{{ role_path }}/files/{{ 'dr' if host_item is search('dr') else '' }}hosts"
      state: absent
    loop: "{{ loop_list }}"
    loop_control:
      loop_var: host_item
    delegate_to: localhost
    run_once: true
  vars:
    hosts_in_play: "{{ ansible_play_hosts | reject('search', 'bastion|vcenter|puppet|nexus') }}"
  tags: vm_configuration
