---
- name: Define configure_ssh_keys
  ansible.builtin.set_fact:
    configure_ssh_keys: true
  when:
    - deploy | default(false) | bool
    - "'bastion' in group_names"
    - bastion.address != []
    - bastion.address != ['']
  tags: ssh_keys

- name: Define rollback_ssh_keys
  ansible.builtin.set_fact:
    rollback_ssh_keys: true
  when:
    - rollback | default(false) | bool
    - "'bastion' in group_names"
    - bastion.address != []
    - bastion.address != ['']
  tags: ssh_keys

- name: Define add_dns_records
  ansible.builtin.set_fact:
    add_dns_records: true
  when:
    - deploy | default(false) | bool
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
  tags: ['infra_dns_records', 'infra_configure', 'infra_build_nodes', 'never']

- name: Define rollback_dns_records
  ansible.builtin.set_fact:
    rollback_dns_records: true
  when:
    - rollback | default(false) | bool
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
  tags: ['infra_dns_records', 'infra_configure', 'never']

- name: Define configure_infra
  ansible.builtin.set_fact:
    configure_infra: true
  when:
    - deploy | default(false) | bool
    - "'vcenter' in group_names or (customer.disaster_recovery and 'drvcenter' in group_names)"
    - information.deptype is not search('h')
  tags: ['infra_configure', 'infra_build_nodes', 'never']

- name: Define rollback_infra
  ansible.builtin.set_fact:
    rollback_infra: true
  when:
    - rollback | default(false) | bool
    - "'vcenter' in group_names or (customer.disaster_recovery and 'drvcenter' in group_names)"
    - information.deptype is not search('h')
  tags: ['infra_configure', 'never']

- name: Define capcheck
  ansible.builtin.set_fact:
    capcheck: true
  when:
    - deploy | default(false) | bool
    - "'vcenter' in group_names or (customer.disaster_recovery and 'drvcenter' in group_names)"
  tags: ['capcheck', 'vm_creation', 'infra_build_nodes']

- name: Define build_infra_nodes
  ansible.builtin.set_fact:
    build_infra_nodes: true
  when:
    - deploy | default(false) | bool
    - (groups['infra'] is defined and 'infra' in group_names) or (groups['nexus'] is defined and 'nexus' in group_names) or \
      (customer.disaster_recovery and groups['drinfra'] is defined and 'drinfra' in group_names)
  tags: ['infra_build_nodes', 'never']

- name: Define rollback_infra_nodes
  ansible.builtin.set_fact:
    rollback_infra_nodes: true
  when:
    - rollback | default(false) | bool
    - (groups['infra'] is defined and 'infra' in group_names) or (groups['nexus'] is defined and 'nexus' in group_names) or \
      (customer.disaster_recovery and groups['drinfra'] is defined and 'drinfra' in group_names)
  tags: ['infra_build_nodes', 'infra_configure', 'never']

- name: Define check_csr_license
  ansible.builtin.set_fact:
    check_csr_license: true
  when:
    - deploy | default(false) | bool
    - (groups['infra'] is defined and 'csr' in group_names) or (customer.disaster_recovery and groups['drinfra'] is defined and 'drcsr' in group_names)
  tags: ['infra_check_csr_license', 'vm_creation']

- name: Define get_release
  ansible.builtin.set_fact:
    get_release: true
  when:
    - deploy | default(false) | bool
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
  tags: ['get_release', 'infra_build_nodes', 'infra_license', 'vm_creation', 'vm_configuration', 'puppet', 'integ_splunk']

- name: Define create_vms_iso
  ansible.builtin.set_fact:
    create_vms_iso: true
  when:
    - deploy | default(false) | bool
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
    - customer.name | lower is search('mdr|stdal') or customer.version.release[1:]|replace('.', '')|int > 9217 or inventory_hostname is search('em7db') or \
      (groups['em7']|length == 1 and 'em7' in group_names) or (inventory_hostname is search('em7') and customer.version.em7_iso is search('em7_x86_64_12.')) \
      # or not bfova | default(false) | bool
    - not \
      ((groups['infra'] is defined and 'infra' in group_names) or (customer.disaster_recovery and groups['drinfra'] is defined and 'drinfra' in group_names))
  tags: vm_creation

- name: Define rollback_vms_iso
  ansible.builtin.set_fact:
    rollback_vms_iso: true
  when:
    - rollback | default(false) | bool
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
    - not \
      ((groups['infra'] is defined and 'infra' in group_names) or (customer.disaster_recovery and groups['drinfra'] is defined and 'drinfra' in group_names))
  tags: vm_creation

- name: Define harden_vms
  ansible.builtin.set_fact:
    harden_vms: true
  when:
    - deploy | default(false) | bool
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
    - inventory_hostname is not search('em7')
    - customer.name | lower is search('mdr|stdal') or customer.version.release[1:]|replace('.', '')|int > 9217 # or not bfova | default(false) | bool
    - not \
      ((groups['infra'] is defined and 'infra' in group_names) or (customer.disaster_recovery and groups['drinfra'] is defined and 'drinfra' in group_names))
  tags: vm_hardening

- name: Define install_splunk
  ansible.builtin.set_fact:
    install_splunk: true
  when:
    - deploy | default(false) | bool
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
    - customer.name | lower is search('mdr')
  tags: integ_splunk

- name: Define create_vms_ova
  ansible.builtin.set_fact:
    create_vms_ova: true
  when:
    - deploy | default(false) | bool
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
    - customer.name | lower is not search('mdr|stdal')
    - customer.version.release[1:]|replace('.', '')|int <= 9217
    - inventory_hostname is not search('em7db')
    - not (groups['em7']|length == 1 and 'em7' in group_names)
    - not (inventory_hostname is search('em7') and customer.version.em7_iso is search('em7_x86_64_12.'))
   # - bfova | default(false) | bool
    - invoker is not search('cdra')
    - not \
      ((groups['infra'] is defined and 'infra' in group_names) or (customer.disaster_recovery and groups['drinfra'] is defined and 'drinfra' in group_names))
  tags: vm_creation

- name: Define deploy_drs
  ansible.builtin.set_fact:
    deploy_drs: true
  when:
    - deploy | default(false) | bool
    - hostvars[groups['vcenter'][0]]['information']['deptype'] == 'h' or \
      (customer.disaster_recovery and hostvars[groups['drvcenter'][0]]['information']['deptype'] == 'h')
    - "'stack' in group_names"
    - customer.name | lower is not search('mdr|stdal')
  tags: ['drs_creation', 'vm_creation']

- name: Define rollback_drs
  ansible.builtin.set_fact:
    rollback_drs: true
  when:
    - rollback | default(false) | bool
    - hostvars[groups['vcenter'][0]]['information']['deptype'] == 'h' or \
      (customer.disaster_recovery and hostvars[groups['drvcenter'][0]]['information']['deptype'] == 'h')
    - "'stack' in group_names"
    - customer.name | lower is not search('mdr|stdal')
  tags: ['drs_creation', 'vm_creation']

- name: Define check_drs_creation
  ansible.builtin.set_fact:
    check_drs_creation: true
  when:
    - deploy | default(false) | bool
    - hostvars[groups['vcenter'][0]]['information']['deptype'] == 'h' or \
      (customer.disaster_recovery and hostvars[groups['drvcenter'][0]]['information']['deptype'] == 'h')
    - "'stack' in group_names"
    - customer.name | lower is not search('mdr|stdal')
  tags: ['drs_status', 'drs_creation', 'vm_creation']

- name: Define check_drs_removal
  ansible.builtin.set_fact:
    check_drs_removal: true
  when:
    - rollback | default(false) | bool
    - hostvars[groups['vcenter'][0]]['information']['deptype'] == 'h' or \
      (customer.disaster_recovery and hostvars[groups['drvcenter'][0]]['information']['deptype'] == 'h')
    - "'stack' in group_names"
    - customer.name | lower is not search('mdr|stdal')
  tags: ['drs_status', 'drs_creation', 'vm_creation']

- name: Define configure_vms_iso
  ansible.builtin.set_fact:
    configure_vms_iso: true
  when:
    - deploy | default(false) | bool
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
    - customer.name | lower is not search('mdr|stdal')
    - customer.version.release[1:]|replace('.', '')|int > 9217 or inventory_hostname is search('em7db') or \
      (groups['em7']|length == 1 and 'em7' in group_names) or (inventory_hostname is search('em7') and customer.version.em7_iso is search('em7_x86_64_12.')) \
      # or not bfova | default(false) | bool
    - invoker is not search('cdra')
    - not \
      ((groups['infra'] is defined and 'infra' in group_names) or (customer.disaster_recovery and groups['drinfra'] is defined and 'drinfra' in group_names))
  tags: ['vm_configuration']

- name: Define configure_vms_ova
  ansible.builtin.set_fact:
    configure_vms_ova: true
  when:
    - deploy | default(false) | bool
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
    - customer.name | lower is not search('mdr|stdal')
    - customer.version.release[1:]|replace('.', '')|int <= 9217
    - inventory_hostname is not search('em7db')
    - not (groups['em7']|length == 1 and 'em7' in group_names)
    - not (inventory_hostname is search('em7') and customer.version.em7_iso is search('em7_x86_64_12.'))
   # - bfova | default(false) | bool
    - invoker is not search('cdra')
    - not \
      ((groups['infra'] is defined and 'infra' in group_names) or (customer.disaster_recovery and groups['drinfra'] is defined and 'drinfra' in group_names))
  tags: ['vm_configuration']

- name: Define push_puppet
  ansible.builtin.set_fact:
    push_puppet: true
  when:
    - deploy | default(false) | bool
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
    - customer.name | lower is not search('mdr|stdal')
    - customer.version.release[1:]|replace('.', '')|int <= 9217
    - not (inventory_hostname is search('em7') and customer.version.em7_iso is search('em7_x86_64_12.'))
   # - bfova | default(false) | bool
    - invoker is not search('cdra')
    - not \
      ((groups['infra'] is defined and 'infra' in group_names) or (customer.disaster_recovery and groups['drinfra'] is defined and 'drinfra' in group_names))
  tags: puppet

- name: Define rollback_puppet
  ansible.builtin.set_fact:
    rollback_puppet: true
  when:
    - rollback | default(false) | bool
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
    - customer.name | lower is not search('mdr|stdal')
    - customer.version.release[1:]|replace('.', '')|int <= 9217
    - not (inventory_hostname is search('em7') and customer.version.em7_iso is search('em7_x86_64_12.'))
   # - bfova | default(false) | bool
    - invoker is not search('cdra')
    - not \
      ((groups['infra'] is defined and 'infra' in group_names) or (customer.disaster_recovery and groups['drinfra'] is defined and 'drinfra' in group_names))
  tags: puppet

- name: Define configure_ppp_vms
  ansible.builtin.set_fact:
    configure_ppp_vms: true
  when:
    - deploy | default(false) | bool
    - customer.disaster_recovery
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
    - customer.name | lower is not search('mdr|stdal')
    - customer.version.release[1:]|replace('.', '')|int <= 9217
   # - bfova | default(false) | bool
    - invoker is not search('cdra')
    - not \
      ((groups['infra'] is defined and 'infra' in group_names) or (customer.disaster_recovery and groups['drinfra'] is defined and 'drinfra' in group_names))
  tags: vm_ppp_configuration

- name: Define splunk_mop_fix
  ansible.builtin.set_fact:
    splunk_mop_fix: true
  when:
    - deploy | default(false) | bool
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
    - customer.name | lower is not search('mdr|stdal')
    - customer.version.release[1:]|replace('.', '')|int <= 9217
   # - bfova | default(false) | bool
    - invoker is not search('cdra')
    - customer.version.release[1:] is search('9.1.3')
    - not \
      ((groups['infra'] is defined and 'infra' in group_names) or (customer.disaster_recovery and groups['drinfra'] is defined and 'drinfra' in group_names))
  tags: splunk_mop

- name: Define sanity_check
  ansible.builtin.set_fact:
    sanity_check: true
  when:
    - deploy | default(false) | bool
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
    - customer.name | lower is not search('mdr|stdal')
    - not (inventory_hostname is search('em7') and customer.version.em7_iso is search('em7_x86_64_12.'))
    - invoker is not search('cdra')
    - not \
      ((groups['infra'] is defined and 'infra' in group_names) or (customer.disaster_recovery and groups['drinfra'] is defined and 'drinfra' in group_names))
  tags: ['sanity']

- name: Define validate_em7
  ansible.builtin.set_fact:
    validate_em7: true
  when:
    - deploy | default(false) | bool
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
    - "'em7' in group_names or (customer.disaster_recovery and 'drem7' in group_names)"
    - customer.name | lower is not search('mdr|stdal')
    - not (inventory_hostname is search('em7') and customer.version.em7_iso is search('em7_x86_64_12.'))
    - invoker is not search('cdra')
    - not \
      ((groups['infra'] is defined and 'infra' in group_names) or (customer.disaster_recovery and groups['drinfra'] is defined and 'drinfra' in group_names))
  tags: ['validate_em7', 'never']

- name: Define validate_splunk
  ansible.builtin.set_fact:
    validate_splunk: true
  when:
    - deploy | default(false) | bool
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
    - "'spl' in group_names or (customer.disaster_recovery and 'drspl' in group_names)"
    - customer.name | lower is not search('mdr|stdal')
    - invoker is not search('cdra')
    - not \
      ((groups['infra'] is defined and 'infra' in group_names) or (customer.disaster_recovery and groups['drinfra'] is defined and 'drinfra' in group_names))
  tags: ['validate_splunk', 'never']

- name: Define validate_relay
  ansible.builtin.set_fact:
    validate_relay: true
  when:
    - deploy | default(false) | bool
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
    - "'rly' in group_names or (customer.disaster_recovery and 'drrly' in group_names)"
    - customer.name | lower is not search('mdr|stdal')
    - invoker is not search('cdra')
    - not \
      ((groups['infra'] is defined and 'infra' in group_names) or (customer.disaster_recovery and groups['drinfra'] is defined and 'drinfra' in group_names))
  tags: ['validate_relay', 'never']

- name: Define drdb_configure
  ansible.builtin.set_fact:
    drdb_configure: true
  when:
    - deploy | default(false) | bool
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
    - inventory_hostname is search('em7db')
    - customer.name | lower is not search('mdr|stdal')
    - not (inventory_hostname is search('em7') and customer.version.em7_iso is search('em7_x86_64_12.'))
    - invoker is not search('cdra')
    - not \
      ((groups['infra'] is defined and 'infra' in group_names) or (customer.disaster_recovery and groups['drinfra'] is defined and 'drinfra' in group_names))
  tags: ['drdb_configuration', 'never']

- name: Define post_install_configuration
  ansible.builtin.set_fact:
    post_install_configuration: true
  when:
    - deploy | default(false) | bool
    - "'stack' in group_names or (customer.disaster_recovery and 'dr' in group_names)"
    - customer.name | lower is not search('mdr|stdal')
    - invoker is not search('cdra')
    - not \
      ((groups['infra'] is defined and 'infra' in group_names) or (customer.disaster_recovery and groups['drinfra'] is defined and 'drinfra' in group_names))
  tags: ['post_install_configuration', 'never']

# - name: Define check_requiretty
#   ansible.builtin.set_fact:
#     check_requiretty: true
#   when:
#     - deploy | default(false) | bool
#     - inventory_hostname in groups['stack'] or ('dr' in group_names and customer.disaster_recovery)
