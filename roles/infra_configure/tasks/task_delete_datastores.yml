---
# tasks file to delete datastores
- block:
  - name: Define existing datastores on {{ resource }}
    vmware_datastore_info:
      hostname: "{{ resource }}"
      username: "{{ information.hostuser }}"
      password: "{{ information.hostpass }}"
      validate_certs: no
    register: detected_datastores

  - name: Unmount datastore on {{ resource }}
    vmware_host_datastore:
      hostname: "{{ resource }}"
      username: "{{ information.hostuser }}"
      password: "{{ information.hostpass }}"
      datastore_name: "{{ datastore_item.name }}"
      validate_certs: no
      state: absent
    register: response
    ignore_errors: yes
    loop: "{{ detected_datastores.datastores }}"
    loop_control:
      loop_var: datastore_item
    when:
      - detected_datastores.datastores != []
      - datastore_item is search(customer.primary.name_prefix) or (datastore_item is search(customer.secondary.name_prefix) if customer.disaster_recovery) or datastore_item is search('datastore1')
  delegate_to: "{{ groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost' }}"
  tags: [ 'infra_configure', 'infra_build_nodes', 'capcheck' ]
