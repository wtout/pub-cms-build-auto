---
# Tasks to configure the default route on the VM
- block:
  - name: Wait on VMware Tools to become available
    vmware_guest_tools_wait:
      hostname: "{{ hostvars[groups['vcenter'][0]]['information']['address'] }}"
      username: "{{ hostvars[groups['vcenter'][0]]['credentials']['username'] }}"
      password: "{{ hostvars[groups['vcenter'][0]]['credentials']['password'] }}"
      validate_certs: false
      name: "{{ vm.name }}"
  - name: Pause for 60 seconds to ensure VM finished booting
    wait_for:
      timeout: 60
    when: deploy_ovf is not changed
  - name: copy default route file locally
    template:
      src: "templates/{{ 'dr_' if 'dr' in group_names else '' }}route-ens160.tmpl"
      dest: "/var/tmp/{{ customer.secondary_name_prefix if 'dr' in group_names else customer.name_prefix }}-{{ inventory_hostname }}-route-ens160"
  - block:
    - name: copy default route file to VM
      vmware_guest_file_operation:
        hostname: "{{ hostvars[groups['vcenter'][0]]['information']['address'] }}"
        username: "{{ hostvars[groups['vcenter'][0]]['credentials']['username'] }}"
        password: "{{ hostvars[groups['vcenter'][0]]['credentials']['password'] }}"
        datacenter: "{{ datacenter.name }}"
        validate_certs: false
        vm_id: "{{ vm.name }}"
        vm_username: "{{ ansible_user }}"
        vm_password: "{{ ansible_ssh_pass }}"
        copy:
            src: "/var/tmp/{{ customer.secondary_name_prefix if 'dr' in group_names else customer.name_prefix }}-{{ inventory_hostname }}-route-ens160"
            dest: "/tmp/route-ens160"
            overwrite: false
      register: copy_em7file
      environment:
        http_proxy: ''
        https_proxy: ''
    - name: restart the network on the VM
      vmware_vm_shell:
        hostname: "{{ hostvars[groups['vcenter'][0]]['information']['address'] }}"
        username: "{{ hostvars[groups['vcenter'][0]]['credentials']['username'] }}"
        password: "{{ hostvars[groups['vcenter'][0]]['credentials']['password'] }}"
        datacenter: "{{ datacenter.name }}"
        validate_certs: false
        vm_id: "{{ vm.name }}"
        vm_username: "{{ ansible_user }}"
        vm_password: "{{ ansible_ssh_pass }}"
        vm_shell: '/usr/bin/sudo'
        vm_shell_args: '-S sh -c "/usr/bin/cp /tmp/route-ens160 /etc/sysconfig/network-scripts/; /bin/systemctl restart network" <<< {{ ansible_ssh_pass }}'
        wait_for_process: true
      when: copy_em7file is changed
    when: inventory_hostname is search('em7')
  - block:
    - name: copy default route file to VM
      vmware_guest_file_operation:
        hostname: "{{ hostvars[groups['vcenter'][0]]['information']['address'] }}"
        username: "{{ hostvars[groups['vcenter'][0]]['credentials']['username'] }}"
        password: "{{ hostvars[groups['vcenter'][0]]['credentials']['password'] }}"
        datacenter: "{{ datacenter.name}}"
        validate_certs: false
        vm_id: "{{ vm.name}}"
        vm_username: "{{ ansible_user }}"
        vm_password: "{{ ansible_ssh_pass }}"
        copy:
            src: "/var/tmp/{{ customer.secondary_name_prefix if 'dr' in group_names else customer.name_prefix }}-{{ inventory_hostname }}-route-ens160"
            dest: "/etc/sysconfig/network-scripts/route-ens160"
            overwrite: false
      register: copy_file
      environment:
        http_proxy: ''
        https_proxy: ''
    - name: restart the network on the VM
      vmware_vm_shell:
        hostname: "{{ hostvars[groups['vcenter'][0]]['information']['address'] }}"
        username: "{{ hostvars[groups['vcenter'][0]]['credentials']['username'] }}"
        password: "{{ hostvars[groups['vcenter'][0]]['credentials']['password'] }}"
        datacenter: "{{ datacenter.name }}"
        validate_certs: false
        vm_id: "{{ vm.name }}"
        vm_username: "{{ ansible_user }}"
        vm_password: "{{ ansible_ssh_pass }}"
        vm_shell: '/bin/systemctl'
        vm_shell_args: 'restart network'
        wait_for_process: true
      when: copy_file is changed
    when:
      - inventory_hostname is not search('em7')
  - name: delete default route file locally
    file:
      path: "/var/tmp/{{ customer.secondary_name_prefix if 'dr' in group_names else customer.name_prefix }}-{{ inventory_hostname }}-route-ens160"
      state: absent
  when:
    - netconfig.gateway1 == ''
  delegate_to: "{{ groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost' }}"
  tags: vm_creation

- name: wait 600 seconds for VM to become reachable
  wait_for_connection:
    timeout: 600
  tags: vm_creation
