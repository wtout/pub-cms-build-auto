---
# tasks to deploy VM from OVF/OVA
- name: Deploy from OVA
  when: build_vm
  delegate_to: "{{ groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost' }}"
  block:
    - name: Get names of networks from ova
      ansible.builtin.shell:
        cmd: |
          set -o pipefail && \
          $(which tar) xfO {{ auto_dir }}/{{ ova_dir }}/{{ ova_name }} *.ovf | grep -i connection | awk -F 'on>' '{print $2}' | cut -d '<' -f1
      register: ova_nets
      changed_when: false
      check_mode: false
    - name: Deploy VM from OVF/OVA
      community.vmware.vmware_deploy_ovf:
        allow_duplicates: false
        hostname: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['address'] }}"
        username: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['username'] }}"
        password: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['password'] }}"
        datacenter: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] }}"
        disk_provisioning: "{{ vm.disk_provisioning if vm.disk_provisioning != '' else 'thin' if hostvars[groups[('dr' if 'dr' in group_names else '') + \
          'vcenter'][0]]['information']['datacenter'] is search('PAE-HX-DC|Staging|STG') else 'thick' }}"
        cluster: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['cluster'] }}"
        datastore: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datastore_cluster'] if \
          hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datastore_cluster'] != '' else vm_ds }}"
        folder: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] + '/vm' + \
          ('/' + fldr_name if fldr_name != '' else '') }}"
        name: "{{ vm.name }}"
        networks: {}
        ova: "{{ auto_dir }}/{{ ova_dir }}/{{ ova_name }}"
        power_on: false
        validate_certs: false
      register: deploy_ovf
      async: 600
      poll: 30
      environment:
        http_proxy: ''
        https_proxy: ''
      throttle: "{{ 5 if hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['deptype'] == 'h' else 25 }}"
    - name: Display success message
      ansible.builtin.debug:
        msg: "Build attempt {{ loop_idx | int + 1 }} succeeded"
    - name: Disable VM building
      ansible.builtin.set_fact:
        build_vm: false
  rescue:
    - name: Display failure message
      ansible.builtin.debug:
        msg: "Build attempt {{ loop_idx | int + 1 }} failed"
