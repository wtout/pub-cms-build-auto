---
# tasks to define the hosted datastore for each host
- name: get host index
  set_fact:
    host_index: "{{ inventory_hostname[-2:] }}"
    vm_group: "{{ inventory_hostname[:-2] }}"
  tags: vm_creation

- name: Get datastore info
  vmware_datastore_info:
    hostname: "{{ hostvars[groups['vcenter'][0]]['information']['address'] }}"
    username: "{{ hostvars[groups['vcenter'][0]]['credentials']['username'] }}"
    password: "{{ hostvars[groups['vcenter'][0]]['credentials']['password'] }}"
    datacenter: "{{ hostvars[groups['vcenter'][0]]['information']['datacenter'] }}"
    cluster: "{{ hostvars[groups['vcenter'][0]]['information']['cluster'] }}"
    validate_certs: no
  register: datastore_info
  delegate_to: "{{ groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost' }}"
  when: host_index|int % 2 != 0 or (host_index|int % 2 == 0 and groups[vm_group][host_index|int - 2] not in ansible_play_hosts)
  tags: vm_creation

- block:
  - name: define hosted datastore names
    set_fact:
      ds_names: "{{ ds_names|default([]) + [task_item.name] }}"
    loop: "{{ datastore_info.datastores | sort(attribute='freeSpace') }}"
    loop_control:
      loop_var: task_item
      label: "{{ task_item.name }}"
    when: task_item.freeSpace >= ((vm.disk|float + vm.memory|float) * 1024|pow(3))

  - name: define hosted datastores list for each host group
    set_fact:
      vm_ds_names: "{{ ds_names | intersect(hostvars[groups['vcenter']|first][vm_group + '_ds_names']) }}"
  - name: assert 1
    assert:
      that:
        - vm_ds_names|length >= 2
      fail_msg: "Not enough storage space to deploy the pair of {{ vm_group }} VMs"
    when:
      - groups[vm_group][host_index] is defined
      - groups[vm_group][host_index|int + 1] is defined
  when: host_index|int % 2 != 0 or (host_index|int % 2 == 0 and groups[vm_group][host_index|int - 2] not in ansible_play_hosts)
  tags: vm_creation

- name: define hosted datastore for each odd index host
  set_fact:
    vm_ds: "{{vm_ds_names[0]}}"
  when:
    - host_index|int % 2 != 0
  tags: vm_creation

- name: define hosted datastore for each even index host
  set_fact:
    vm_ds: "{{ hostvars[groups[vm_group][host_index|int - 2]]['vm_ds_names'][1] if groups[vm_group][host_index|int - 2] in ansible_play_hosts else vm_ds_names[1] }}"
  when:
    - host_index|int % 2 == 0
  tags: vm_creation
