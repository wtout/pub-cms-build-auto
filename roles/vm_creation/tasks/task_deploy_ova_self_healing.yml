---
# tasks to deploy VM from OVA
- name: Deploy VM from OVA self healing
  delegate_to: "{{ groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost' }}"
  block:
    - name: Get VM info
      community.vmware.vmware_guest_info:
        hostname: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['address'] }}"
        username: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['username'] }}"
        password: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['password'] }}"
        datacenter: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] }}"
        name: "{{ vm.name }}"
        validate_certs: false
      check_mode: false
      register: reg_vmguest_info
  rescue:
    - name: Enable VM building
      ansible.builtin.set_fact:
        build_vm: true
    - name: Deploy OVA
      ansible.builtin.include_tasks: task_deploy_ova.yml
      loop: "{{ range(1, 3 + 1) | list }}"
      loop_control:
        loop_var: loop_item
        index_var: loop_idx
  always:
    - name: Assert deployment from OVA succeded
      ansible.builtin.assert:
        that:
          - "deploy_ovf | default({'failed': false}) is succeeded"
