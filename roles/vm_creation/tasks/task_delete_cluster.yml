---
# tasks to delete cluster
- block:
  - name: Get VM info
    vmware_vm_info:
      hostname: "{{ host_item }}"
      username: "{{ hostvars[groups['vcenter'][0]]['information']['hostuser'] }}"
      password: "{{ hostvars[groups['vcenter'][0]]['information']['hostpass'] }}"
      vm_type: vm
      validate_certs: no
    loop: "{{ hostvars[groups['vcenter'][0]]['information']['resources'][:2] }}"
    loop_control:
      loop_var: host_item
      label: "{{ host_item }}"
    check_mode: no
    register: vm_info
    delegate_to: "{{ groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost' }}"

  - name: define vm names list
    set_fact:
      vm_names: "{{ vm_names|default([]) + [host_item.virtual_machines | map(attribute='guest_name') | list] | flatten }}"
    loop: "{{ vm_info.results }}"
    loop_control:
      loop_var: host_item
      label: "{{ host_item.virtual_machines | map(attribute='guest_name') | list }}"

  - include_tasks:
      file:
        task_check_cluster_empty.yml
      apply:
        vars:
          - vm_name: "{{ vm_item }}"
    loop: "{{ vm_names }}"
    loop_control:
      loop_var: vm_item
      label: "{{ vm_item }}"

  - name: define delete_cluster
    set_fact:
      delete_cluster: "{{ cluster_empty }}"

  - name: Check if '{{ hostvars[groups['vcenter'][0]]['information']['cluster'] }}' cluster exists
    vmware_cluster_info:
      hostname: "{{ hostvars[groups['vcenter'][0]]['information']['address'] }}"
      username: "{{ hostvars[groups['vcenter'][0]]['credentials']['username'] }}"
      password: "{{ hostvars[groups['vcenter'][0]]['credentials']['password'] }}"
      cluster_name: "{{ hostvars[groups['vcenter'][0]]['information']['cluster'] }}"
      validate_certs: no
    register: cluster_status
    delegate_to: "{{ groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost' }}"
    run_once: true
    ignore_errors: true
    when: delete_cluster|bool
    check_mode: no

  - block:
    - name: Put hosts in maintenance mode
      vmware_maintenancemode:
        hostname: "{{ hostvars[groups['vcenter'][0]]['information']['address'] }}"
        username: "{{ hostvars[groups['vcenter'][0]]['credentials']['username'] }}"
        password: "{{ hostvars[groups['vcenter'][0]]['credentials']['password'] }}"
        esxi_hostname: "{{ host_item }}"
        timeout: 3600
        state: present
        validate_certs: no
      loop: "{{ hostvars[groups['vcenter'][0]]['information']['resources'][:2] }}"
      loop_control:
        loop_var: host_item
        label: "{{ host_item }}"
      register: maint_mode

    - name: Move hosts out of the '{{ hostvars[groups['vcenter'][0]]['information']['cluster'] }}' cluster
      vmware_host:
        hostname: "{{ hostvars[groups['vcenter'][0]]['information']['address'] }}"
        username: "{{ hostvars[groups['vcenter'][0]]['credentials']['username'] }}"
        password: "{{ hostvars[groups['vcenter'][0]]['credentials']['password'] }}"
        datacenter: "{{ hostvars[groups['vcenter'][0]]['information']['datacenter'] }}"
        folder: "{{ hostvars[groups['vcenter'][0]]['information']['datacenter'] }}/host"
        esxi_hostname: "{{ host_item }}"
        esxi_username: "{{ hostvars[groups['vcenter'][0]]['information']['hostuser'] }}"
        esxi_password: "{{ hostvars[groups['vcenter'][0]]['information']['hostpass'] }}"
        state: present
        validate_certs: no
      loop: "{{ hostvars[groups['vcenter'][0]]['information']['resources'][:2] }}"
      loop_control:
        loop_var: host_item
        label: "{{ host_item }}"
      register: move_hosts

    - name: Put hosts in normal mode
      vmware_maintenancemode:
        hostname: "{{ hostvars[groups['vcenter'][0]]['information']['address'] }}"
        username: "{{ hostvars[groups['vcenter'][0]]['credentials']['username'] }}"
        password: "{{ hostvars[groups['vcenter'][0]]['credentials']['password'] }}"
        esxi_hostname: "{{ host_item }}"
        timeout: 3600
        state: absent
        validate_certs: no
      loop: "{{ hostvars[groups['vcenter'][0]]['information']['resources'][:2] }}"
      loop_control:
        loop_var: host_item
        label: "{{ host_item }}"
      register: normal_mode

    - name: Delete the '{{ hostvars[groups['vcenter'][0]]['information']['cluster'] }}' cluster
      vmware_cluster:
        hostname: "{{ hostvars[groups['vcenter'][0]]['information']['address'] }}"
        username: "{{ hostvars[groups['vcenter'][0]]['credentials']['username'] }}"
        password: "{{ hostvars[groups['vcenter'][0]]['credentials']['password'] }}"
        datacenter: "{{ hostvars[groups['vcenter'][0]]['information']['datacenter'] }}"
        cluster_name: "{{ hostvars[groups['vcenter'][0]]['information']['cluster'] }}"
        state: absent
        validate_certs: no
      register: cust_cluster
    delegate_to: "{{ groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost' }}"
    run_once: true
    when:
      - cluster_status is successful
      - hostvars[groups['vcenter'][0]]['information']['cluster'] != ''
      - delete_cluster|bool
  tags: vm_creation
