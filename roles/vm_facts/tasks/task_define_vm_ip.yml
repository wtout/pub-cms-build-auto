---
# tasks to define vm ips
- block:
  - name: define ansible_host for HA DBs
    set_fact:
      ansible_host: "{{ em7db_ip1_list[db_item[-2:]|int - 1] }}"
    delegate_to: "{{ db_item }}"
    delegate_facts: yes
    loop: "{{ groups['em7db'] }}"
    loop_control:
      loop_var: db_item
    when:
      - ansible_run_tags is search('puppet|vm_ppp_configuration')
      - groups['em7db'] is defined
      - ansible_play_hosts | select('regex','em7db0[1-2]') | length < 2
    run_once: true
  - name: define ansible_host for DR DB
    set_fact:
      ansible_host: "{{ drem7db_ip1_list[db_item[-2:]|int - 1] }}"
    delegate_to: "{{ db_item }}"
    delegate_facts: yes
    loop: "{{ groups['drem7db'] }}"
    loop_control:
      loop_var: db_item
    when:
      - customer.disaster_recovery
      - ansible_play_hosts | select('regex','drem7db01') | length < 1
    run_once: true

  - name: define IP addresses
    set_fact:
      ipaddress1: "{{ netconfig.ippool1[index|int - 1] if netconfig.ippool1 != [] else (customer.secondary.octets if inventory_hostname is search('dr') else customer.primary.octets) + '.' + netconfig.octetpool1[index|int - 1]|string if (netconfig.octetpool1 != [] and index|int <= netconfig.octetpool1|length) else '' }}"
      ipaddress2: "{{ netconfig.ippool2[index|int - 1] if netconfig.ippool2 != [] else (customer.secondary.octets if inventory_hostname is search('dr') else customer.primary.octets) + '.' + netconfig.octetpool2[index|int - 1]|string if (netconfig.octetpool2 != [] and index|int <= netconfig.octetpool2|length) else '' }}"
      ipaddress3: "{{ netconfig.ippool3[index|int - 1] if (netconfig.ippool3 is defined and netconfig.ippool3 != []) else (customer.secondary.octets if inventory_hostname is search('dr') else customer.primary.octets) + '.' + netconfig.octetpool3[index|int - 1]|string if ((netconfig.octetpool3 is defined and netconfig.octetpool3 != []) and index|int <= netconfig.octetpool3|length) else '' }}"
      ipaddress4: "{{ netconfig.ippool4[index|int - 1] if (netconfig.ippool4 is defined and netconfig.ippool4 != []) else (customer.secondary.octets if inventory_hostname is search('dr') else customer.primary.octets) + '.' + netconfig.octetpool4[index|int - 1]|string if ((netconfig.octetpool4 is defined and netconfig.octetpool4 != []) and index|int <= netconfig.octetpool4|length) else '' }}"
      ipaddress5: "{{ netconfig.ippool5[index|int - 1] if (netconfig.ippool5 is defined and netconfig.ippool5 != []) else (customer.secondary.octets if inventory_hostname is search('dr') else customer.primary.octets) + '.' + netconfig.octetpool5[index|int - 1]|string if ((netconfig.octetpool5 is defined and netconfig.octetpool5 != []) and index|int <= netconfig.octetpool5|length) else '' }}"
    vars:
      index: "{{ inventory_hostname[-2:] }}"

  - name: define ansible_host
    set_fact:
      ansible_host: "{{ ipaddress3 if inventory_hostname is search('csr') else ipaddress1 }}"

  - name: update netconfig with IP addresses
    set_fact:
      netconfig: "{{ netconfig|default({}) | combine(new_item, recursive=true) }}"
    vars:
      new_item: "{'{{ task_item.key }}': '{{ task_item.value }}'}"
    loop:
      - { key: 'ipaddress1', value: '{{ ipaddress1 }}'}
      - { key: 'ipaddress2', value: '{{ ipaddress2 }}'}
      - { key: 'ipaddress3', value: '{{ ipaddress3 }}'}
      - { key: 'ipaddress4', value: '{{ ipaddress4 }}'}
      - { key: 'ipaddress5', value: '{{ ipaddress5 }}'}
    loop_control:
      loop_var: task_item
    no_log: true
  tags: ['always', 'vm_facts']
