---
# Task file to delete DNS records
- name: Delete primary site DNS records
  when:
    - "'stack' in group_names"
  block:
    - name: Delete forward record
      ansible.builtin.include_tasks:
        file: task_delete_forward_record.yml
        apply:
          vars:
            mydesignation: 'primary'
            myserver: "{{ sysconfig.primary.dns_servers[0] }}"
            mydomain: "{{ sysconfig.primary.domain_name }}"
            myrecord: "{{ vm.name }}"
            myipaddress: "{{ netconfig.nic1.ipaddress if vm.name is not search('csr') else netconfig.nic3.ipaddress }}"
    - name: Delete reverse record
      ansible.builtin.include_tasks:
        file: task_delete_reverse_record.yml
        apply:
          vars:
            mydesignation: 'primary'
            myserver: "{{ sysconfig.primary.dns_servers[0] }}"
            mydomain: "{{ sysconfig.primary.domain_name }}"
            myrecord: "{{ vm.name }}"
            myipaddress: "{{ netconfig.nic1.ipaddress if vm.name is not search('csr') else netconfig.nic3.ipaddress }}"
    - name: Remove Additional DNS Records
      ansible.builtin.include_tasks:
        file: task_manage_adtl_records.yml
        apply:
          vars:
            dns_server: "{{ sysconfig.primary.dns_servers[0] }}"
            dns_zone: "{{ sysconfig.primary.domain_name }}"
            dns_state: 'absent'
            dns_loop: "{{ dns_records + dns_recordsa if mydeptype is not search('h') else dns_records }}"
      when:
        - ansible_play_batch | reject('search', 'dr|vcenter|bastion|puppet|nexus') | list | length >= 1
      vars:
        mydeptype: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['deptype'] }}"
- name: Delete secondary site DNS records
  when:
    - customer.disaster_recovery
    - "'dr' in group_names"
  block:
    - name: Delete forward record
      ansible.builtin.include_tasks:
        file: task_delete_forward_record.yml
        apply:
          vars:
            mydesignation: 'secondary'
            myserver: "{{ sysconfig.secondary.dns_servers[0] }}"
            mydomain: "{{ sysconfig.secondary.domain_name }}"
            myrecord: "{{ vm.name }}"
            myipaddress: "{{ netconfig.nic1.ipaddress if vm.name is not search('csr') else netconfig.nic3.ipaddress }}"
    - name: Delete reverse record
      ansible.builtin.include_tasks:
        file: task_delete_reverse_record.yml
        apply:
          vars:
            mydesignation: 'secondary'
            myserver: "{{ sysconfig.secondary.dns_servers[0] }}"
            mydomain: "{{ sysconfig.secondary.domain_name }}"
            myrecord: "{{ vm.name }}"
            myipaddress: "{{ netconfig.nic1.ipaddress if vm.name is not search('csr') else netconfig.nic3.ipaddress }}"
    - name: Remove Additional DR DNS Records
      ansible.builtin.include_tasks:
        file: task_manage_adtl_records.yml
        apply:
          vars:
            dns_server: "{{ sysconfig.secondary.dns_servers[0] }}"
            dns_zone: "{{ sysconfig.secondary.domain_name }}"
            dns_state: 'absent'
            dns_loop: "{{ dr_dns_records + dr_dns_recordsa if mydeptype is not search('h') else dr_dns_records }}"
      when:
        - ansible_play_batch | select('search', 'dr') | reject('search', 'vcenter|bastion|puppet|nexus') | list | length >= 1
      vars:
        mydeptype: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['deptype'] }}"
