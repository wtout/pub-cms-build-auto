---
# tasks to get datastore facts
- block:
  - name: Get datastore facts
    vmware_datastore_facts:
      hostname: "{{hostvars[groups['vcenter'][0]]['information']['address']}}"
      username: "{{hostvars[groups['vcenter'][0]]['credentials']['username']}}"
      password: "{{hostvars[groups['vcenter'][0]]['credentials']['password']}}"
      datacenter: "{{hostvars[groups['vcenter'][0]]['information']['datacenter']}}"
      cluster: "{{hostvars[groups['vcenter'][0]]['information']['cluster']}}"
      validate_certs: no
    register: datastore_facts
    delegate_to: "{{groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost'}}"

  - name: define lists of datastores to host the VMs
    include_tasks:
      file:
        task_define_datastores_list.yml
      apply:
        vars:
          - vm_group: "{{ group_item }}"
          - ds_list: "{{datastore_facts.datastores | sort(attribute='freeSpace')}}"
    loop: "{{ group_list }}"
    loop_control:
      loop_var: group_item

  - name: define list of usable datastores
    set_fact:
      usable_ds_list: "{{ usable_ds_list|default([]) | union(vars[group_item + '_ds_names']) }}" 
    loop: "{{ group_list }}"
    loop_control:
      loop_var: group_item

  - name: define total free space on usable datastores
    set_fact:
      total_fs: "{{total_fs|default(0)|int + myvar[0]}}"
    vars:
      myvar: "{{datastore_facts.datastores|selectattr('name', 'equalto', loop_item)|map(attribute='freeSpace')|list}}"
    loop: "{{usable_ds_list|default([])}}"
    loop_control:
      loop_var: loop_item

  - debug:
      msg:
        - "{{ usable_ds_list }}"
        - "Total system available storage space: {{(total_fs|float / 1024|pow(4))|string + ' TiB' if (total_fs|int)|string|length > 12 else (total_fs|float / 1024|pow(3))|string + ' GiB'}}"

  - assert:
      that:
        - "(total_fs|float / 1024|pow(3)) >= required_space|float"
      fail_msg: "Not enough storage space to deploy all the VMs"
  tags: ['capcheck', 'vm_creation']
