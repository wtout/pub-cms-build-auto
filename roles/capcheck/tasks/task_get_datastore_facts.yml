---
# tasks to get datastore info
- block:
  - name: Get datastore info
    vmware_datastore_info:
      hostname: "{{ information.address }}"
      username: "{{ credentials.username }}"
      password: "{{ credentials.password }}"
      datacenter: "{{ information.datacenter }}"
      cluster: "{{ information.cluster }}"
      validate_certs: no
    register: datastore_info
    delegate_to: "{{ groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost' }}"

  - name: define lists of datastores to host the VMs
    include_tasks:
      file:
        task_define_datastores_list.yml
      apply:
        vars:
          - vm_group: "{{ group_item }}"
          - ds_list: "{{ datastore_info.datastores | sort(attribute='freeSpace') }}"
    loop: "{{ play_stack_group_list }}"
    loop_control:
      loop_var: group_item

  - name: define list of usable datastores
    set_fact:
      usable_ds_list: "{{ usable_ds_list|default([]) | union(vars[group_item + '_ds_names']) }}" 
    loop: "{{ play_stack_group_list }}"
    loop_control:
      loop_var: group_item

  - name: define total free space on usable datastores
    set_fact:
      total_fs: "{{ total_fs|default(0)|int + myvar[0] }}"
    vars:
      myvar: "{{ datastore_info.datastores|selectattr('name', 'equalto', loop_item)|map(attribute='freeSpace')|list }}"
    loop: "{{ usable_ds_list|default([]) }}"
    loop_control:
      loop_var: loop_item

  - debug:
      msg:
        - "{{ usable_ds_list }}"
        - "Total system available storage space: {{ (total_fs|float / 1024|pow(4))|string + ' TiB' if (total_fs|int)|string|length > 12 else (total_fs|float / 1024|pow(3))|string + ' GiB' }}"

  - assert:
      that:
        - "(total_fs|float / 1024|pow(3)) >= stack_required_space|float"
      fail_msg: "Not enough storage space to deploy all the VMs"
  tags: ['capcheck', 'vm_creation', 'puppet', 'infra_configure', 'infra_build_nodes']
  