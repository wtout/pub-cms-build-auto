---
# tasks to update data.conf on VM
- block:
  - block:
    - name: define list of hosts that need data.conf
      ansible.builtin.set_fact:
        data_conf_hosts: "{{ (groups['stack']  | difference(groups['infra']) if groups['infra'] is defined else groups['stack']) + (groups['dr'] | difference(groups['drinfra']) if groups['drinfra'] is defined else groups['dr']) if customer.disaster_recovery and ansible_play_hosts | reject('search', 'vcenter|nexus') == groups['dr'] else ((groups['stack']  | difference(groups['infra']) if groups['infra'] is defined else groups['stack']) + ((groups['dr'] | difference(groups['drinfra']) if groups['drinfra'] is defined else groups['dr']) if customer.disaster_recovery else [])) | intersect(ansible_play_hosts) }}"
    - name: create the files directory
      ansible.builtin.file:
        path: "{{ role_path }}/files"
        state: directory
    - name: render data.conf file
      ansible.builtin.template:
        src: "{{ role_path }}/templates/{{ customer.version.release[1:4].split('.')|join }}-{{ 'dr' if host_item is search('dr') else '' }}data.conf.tmpl"
        dest: "{{ role_path }}/files/{{ hostvars[host_item]['vm']['name'] }}-data.conf"
      loop: "{{ data_conf_hosts }}"
      loop_control:
        loop_var: host_item
    delegate_to: localhost
    run_once: true

  - block:
    - name: Create the puppet directory
      ansible.builtin.file:
        path: /opt/puppet/var
        state: directory
    - name: copy data.conf to VM
      ansible.builtin.copy:
        src: "{{ role_path }}/files/{{ vm.name }}-data.conf"
        dest: '/opt/puppet/var/data.conf'
      when: not ansible_check_mode
    become: "{{ true if inventory_hostname is search('em7') else false }}"

  - block:
    - name: define location to store HA files on DR lnxjmp
      set_fact:
        hafiles_storage: '/opt/HAfiles'
    - name: create directory to store HA files on DR lnxjmp
      ansible.builtin.file:
        path: "{{ hafiles_storage }}"
        state: directory
    - name: copy HA data.conf files to DR lnxjmp
      ansible.builtin.copy:
        dest: "{{ hafiles_storage }}"
        src: "{{ role_path }}/files/{{ hostvars[host_item]['vm']['name'] }}-data.conf"
      loop: "{{ data_conf_hosts | difference(groups['dr']) }}"
      loop_control:
        loop_var: host_item
      when: not ansible_check_mode
    delegate_to: "{{ groups['drlnxjmp']|first }}"
    run_once: true
    when:
      - customer.disaster_recovery
      - hosts_in_play | difference(groups['dr']) | length == 0
      - hosts_in_play | select('search', 'drlnxjmp') | length >= 1

  - name: delete local file
    ansible.builtin.file:
      path: "{{ role_path }}/files/{{ hostvars[host_item]['vm']['name'] }}-data.conf"
      state: absent
    loop: "{{ data_conf_hosts }}"
    loop_control:
      loop_var: host_item
    delegate_to: localhost
    run_once: true
  vars:
    hosts_in_play: "{{ ansible_play_hosts | reject('search', 'bastion|vcenter|puppet|nexus') }}"
  tags: vm_configuration
