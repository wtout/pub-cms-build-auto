---
# tasks to get datastore facts
- name: Get datastore facts
  vmware_datastore_facts:
    hostname: "{{hostvars[groups['vcenter'][0]]['information']['address']}}"
    username: "{{hostvars[groups['vcenter'][0]]['credentials']['username']}}"
    password: "{{hostvars[groups['vcenter'][0]]['credentials']['password']}}"
    datacenter: "{{hostvars[groups['vcenter'][0]]['information']['datacenter']}}"
    validate_certs: no
  register: datastore_facts
  delegate_to: "{{groups['bastion'][0] if (groups['bastion'] | length >= 1 and hostvars[groups['bastion'][0]]['ansible_host'] != '') else 'localhost'}}"
  no_log: true
  when: inventory_hostname == groups[vm_group][pair_num]
  tags: vms

- block:
  - name: define datastore names
    set_fact:
      ds_names: "{{ds_names|default([]) + [task_item.name]}}"
    loop: "{{datastore_facts.datastores | sort(attribute='freeSpace', reverse=true)}}"
    loop_control:
      loop_var: task_item
    when: task_item.freeSpace >= (vm.disk|float * 1024|pow(3))
    no_log: true
  - name: define datastores list for each host group
    set_fact:
      vm_ds_names: "{{ds_names | intersect(hostvars[groups['vcenter'][0]]['db_ds_names']) if vm_group == 'em7db' else ds_names | intersect(hostvars[groups['vcenter'][0]]['vm_ds_names'])}}"
  when: inventory_hostname == groups[vm_group][pair_num]
  tags: vms

- name: define datastore for each host
  set_fact:
    vm_ds: "{{vm_ds_names[0]}}"
  when: inventory_hostname == groups[vm_group][pair_num]
  tags: vms

- name: define datastore for each host
  set_fact:
    vm_ds: "{{hostvars[groups[vm_group][pair_num]]['vm_ds_names'][1]}}"
  when: inventory_hostname == groups[vm_group][pair_num + 1]
  tags: vms
